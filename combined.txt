

=== ./models/vaccines.py ===
from odoo import models, fields, api

class Vaccine(models.Model):
    _name = "animal.vaccine"
    _description = "Animal vaccines table"

    name = fields.Char(string="Vacuna", required=True)
    description = fields.Text(string="Descripción")


class Vaccination(models.Model):
    _name = "animal.vaccination"
    _description = "Registro de vacunación por animal"
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _order = "date desc, id desc"

    # Enlaces
    animal_id = fields.Many2one(
        "animal",
        string="Animal",
        required=True,
        ondelete="cascade",
        index=True,
        tracking=True,
    )
    vaccine_id = fields.Many2one(
        "animal.vaccine",
        string="Vacuna",
        required=True,
        ondelete="restrict",
        tracking=True,
    )

    # Datos de la aplicación
    date = fields.Date(string="Fecha de vacunación", required=True, tracking=True)
    route = fields.Selection([
        ('sc', 'Subcutánea'),
        ('im', 'Intramuscular'),
        ('iv', 'Intravenosa'),
        ('oral', 'Oral'),
        ('intranasal', 'Intranasal'),
        ('topical', 'Tópica'),
        ('other', 'Otra'),
    ], string="Vía de administración", tracking=True)
    doctor = fields.Char(string="Dr/Dra (aplicó)", tracking=True)
    next_date = fields.Date(string="Próxima vacunación", tracking=True)
    notes = fields.Text(string="Notas/Observaciones")

    # Auxiliares de lectura
    owner_id = fields.Many2one(
        related="animal_id.owner",
        string="Dueño",
        store=True,
        readonly=True
    )
    specie_id = fields.Many2one(
        related="animal_id.species",
        string="Especie",
        store=True,
        readonly=True
    )

    @api.onchange('animal_id')
    def _onchange_animal_id_prefill_doctor(self):
        """Si el animal tiene 'médico tratante', proponerlo como doctor."""
        for rec in self:
            if rec.animal_id and rec.animal_id.treating_doctor and not rec.doctor:
                rec.doctor = rec.animal_id.treating_doctor

    def name_get(self):
        res = []
        for rec in self:
            label = "%s" % (rec.vaccine_id.name if rec.vaccine_id else "Vacuna")
            if rec.date:
                label += " - %s" % fields.Date.to_string(rec.date)
            res.append((rec.id, label))
        return res

    _sql_constraints = [
        # Evitar duplicados exactos (mismo animal, misma vacuna, misma fecha)
        ('unique_animal_vaccine_date',
         'unique(animal_id, vaccine_id, date)',
         'Ya existe un registro de esta vacuna para el animal en la misma fecha.')
    ]


=== ./models/tag.py ===
from odoo import models, fields, api

class Tag(models.Model):
    _name = "animal.tag"
    _description = "Animal tags table"

    name = fields.Char(string="Etiqueta", required=True)
    description = fields.Text(string="Descripción")
    color = fields.Integer(string="Color")


=== ./models/dewormings.py ===
from odoo import models, fields, api


class Dewormer(models.Model):
    _name = "animal.dewormer"
    _description = "Catálogo de desparasitantes (antiparasitarios)"

    name = fields.Char(string="Desparasitante", required=True)
    description = fields.Text(string="Descripción")


class Deworming(models.Model):
    _name = "animal.deworming"
    _description = "Registro de desparasitación por animal"
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _order = "date desc, id desc"

    # Enlaces
    animal_id = fields.Many2one(
        "animal",
        string="Animal",
        required=True,
        ondelete="cascade",
        index=True,
        tracking=True,
    )
    dewormer_id = fields.Many2one(
        "animal.dewormer",
        string="Desparasitante",
        required=True,
        ondelete="restrict",
        tracking=True,
    )

    # Datos de la aplicación
    date = fields.Date(string="Fecha de desparasitación", required=True, tracking=True)
    route = fields.Selection([
        ('sc', 'Subcutánea'),
        ('im', 'Intramuscular'),
        ('iv', 'Intravenosa'),
        ('oral', 'Oral'),
        ('intranasal', 'Intranasal'),
        ('topical', 'Tópica'),
        ('other', 'Otra'),
    ], string="Vía de administración", tracking=True)
    doctor = fields.Char(string="Dr/Dra (aplicó)", tracking=True)
    next_date = fields.Date(string="Próxima desparasitación", tracking=True)
    notes = fields.Text(string="Notas/Observaciones")

    # Auxiliares de lectura
    owner_id = fields.Many2one(
        related="animal_id.owner",
        string="Dueño",
        store=True,
        readonly=True
    )
    specie_id = fields.Many2one(
        related="animal_id.species",
        string="Especie",
        store=True,
        readonly=True
    )

    @api.onchange('animal_id')
    def _onchange_animal_id_prefill_doctor(self):
        """Si el animal tiene 'médico tratante', proponerlo como doctor."""
        for rec in self:
            if rec.animal_id and rec.animal_id.treating_doctor and not rec.doctor:
                rec.doctor = rec.animal_id.treating_doctor

    def name_get(self):
        res = []
        for rec in self:
            label = "%s" % (rec.dewormer_id.name if rec.dewormer_id else "Desparasitación")
            if rec.date:
                label += " - %s" % fields.Date.to_string(rec.date)
            res.append((rec.id, label))
        return res

    _sql_constraints = [
        # Evitar duplicados exactos (mismo animal, mismo desparasitante, misma fecha)
        ('unique_animal_dewormer_date',
         'unique(animal_id, dewormer_id, date)',
         'Ya existe un registro de esta desparasitación para el animal en la misma fecha.')
    ]


=== ./models/species.py ===
from odoo import models, fields, api 


class Specie(models.Model):
    _name = "animal.specie"
    _description = "Animals species table"

    name = fields.Char(string="Especie")
    characteristics = fields.Text(string="Características")


=== ./models/breeds.py ===
from odoo import models, fields, api

class Breed(models.Model):
    _name = "animal.breed"
    _description = "Animal breeds table"

    name = fields.Char(string="Raza", required=True)
    specie = fields.Many2one("animal.specie", string="Especie")
    description = fields.Text(string="Descripción")


=== ./models/__init__.py ===
# -*- coding: utf-8 -*-

from . import animals, allergies, diseases, insurances, medicines, species, surgeries, tag, vaccines, dewormings, visits, breeds, partner_pet, exam_orders
from . import sterilizations
from . import consents
from . import waiting_room


=== ./models/diseases.py ===
from odoo import models, fields, api

class Disease(models.Model):
    _name = "animal.disease"
    _description = "Animal diseases table"

    name = fields.Char(string="Surgerie", required=True)
    observations = fields.Text(string="Observations")


=== ./models/waiting_room.py ===
from odoo import models, fields, api, _
from odoo.exceptions import UserError


class VetWaitingTicket(models.Model):
    _name = "vet.waiting.ticket"
    _description = "Sala de Espera - Ticket"
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _order = "state, priority desc, arrival_time asc, id asc"

    # Identificador / referencia
    sequence = fields.Char(
        string="Ticket",
        required=True,
        copy=False,
        readonly=True,
        index=True,
        default=lambda self: 'Nuevo',
        tracking=True
    )

    # Enlaces
    animal_id = fields.Many2one(
        'animal',
        string='Animal',
        required=True,
        tracking=True,
    )
    owner_id = fields.Many2one(
        related='animal_id.owner',
        string="Dueño",
        store=True,
        readonly=True
    )

    # Datos del paciente (solo lectura para filtros/listados)
    specie_id = fields.Many2one(
        related='animal_id.species',
        string='Especie',
        store=True,
        readonly=True
    )
    breed_id = fields.Many2one(
        related='animal_id.breed',
        string='Raza',
        store=True,
        readonly=True
    )
    sex = fields.Selection(
        related='animal_id.sex',
        string='Sexo',
        store=True,
        readonly=True
    )
    microchip_number = fields.Char(
        related='animal_id.microchip_number',
        string="N° de microchip",
        store=True,
        readonly=True
    )

    # Sala de espera
    arrival_time = fields.Datetime(
        string="Ingreso",
        required=True,
        default=fields.Datetime.now,
        tracking=True
    )
    called_time = fields.Datetime(string="Llamado")
    start_time = fields.Datetime(string="Inicio atención")
    end_time = fields.Datetime(string="Fin atención")

    reason = fields.Text(string="Motivo")
    doctor = fields.Char(string="Dr/Dra asignado/a", tracking=True)
    room = fields.Char(string="Box/consulta")

    # Prioridad/Triage (ordenable desc por valor)
    priority = fields.Selection([
        ('0', 'Baja'),
        ('1', 'Normal'),
        ('2', 'Alta'),
        ('3', 'Emergencia'),
    ], string="Prioridad", default='1', tracking=True, index=True)

    # Estado del ticket
    state = fields.Selection([
        ('waiting', 'En espera'),
        ('called', 'Llamado'),
        ('in_consultation', 'En consulta'),
        ('paused', 'Pausado'),
        ('done', 'Atendido'),
        ('cancelled', 'Cancelado'),
    ], string="Estado", default='waiting', tracking=True, index=True)

    # Visita creada a partir del ticket
    visit_id = fields.Many2one('animal.visit', string="Visita vinculada", tracking=True)

    # Auxiliares
    waiting_minutes = fields.Integer(
        string="Min. en espera",
        compute="_compute_waiting_minutes",
        help="Minutos transcurridos desde el ingreso hasta ahora o hasta el inicio/fin."
    )
    notes = fields.Text(string="Notas internas")

    @api.model
    def create(self, vals):
        if vals.get('sequence', 'Nuevo') == 'Nuevo':
            vals['sequence'] = self.env['ir.sequence'].next_by_code('vet.waiting.ticket.sequence') or 'Nuevo'
        return super().create(vals)

    @api.depends('arrival_time', 'start_time', 'end_time')
    def _compute_waiting_minutes(self):
        """Calcula minutos de espera efectivos (hasta start_time, end_time o ahora)."""
        now = fields.Datetime.now()
        for rec in self:
            if not rec.arrival_time:
                rec.waiting_minutes = 0
                continue
            stop = rec.start_time or rec.end_time or now
            delta = fields.Datetime.to_datetime(stop) - fields.Datetime.to_datetime(rec.arrival_time)
            rec.waiting_minutes = int(delta.total_seconds() // 60)

    @api.onchange('animal_id')
    def _onchange_animal_id_suggest_doctor(self):
        """Si el animal tiene 'médico tratante', sugerirlo como doctor."""
        for rec in self:
            if rec.animal_id and rec.animal_id.treating_doctor and not rec.doctor:
                rec.doctor = rec.animal_id.treating_doctor

    # === Acciones de flujo ===
    def action_call(self):
        for rec in self:
            if rec.state not in ('waiting', 'paused'):
                raise UserError(_("Solo se puede 'llamar' tickets en espera o pausados."))
            rec.write({'state': 'called', 'called_time': fields.Datetime.now()})
        return True

    def action_start_consultation(self):
        """Pasa a 'En consulta'. Si no existe, crea la visita y la vincula."""
        for rec in self:
            if rec.state not in ('waiting', 'called', 'paused'):
                raise UserError(_("Solo se puede iniciar atención desde En espera/Llamado/Pausado."))

            visit = rec.visit_id
            if not visit:
                visit_vals = {
                    'animal_id': rec.animal_id.id,
                    'date': fields.Datetime.now(),
                    'doctor': rec.doctor or (rec.animal_id and rec.animal_id.treating_doctor) or False,
                    # Campos nuevos en Visit (v17 del módulo): los rellenamos si existen
                    'consultation_reason': rec.reason or '',
                }
                visit = self.env['animal.visit'].create(visit_vals)
                rec.visit_id = visit.id

            rec.write({'state': 'in_consultation', 'start_time': fields.Datetime.now()})

            # Abrir la visita en formulario
            return {
                'type': 'ir.actions.act_window',
                'name': _('Visita'),
                'res_model': 'animal.visit',
                'view_mode': 'form',
                'res_id': visit.id,
                'target': 'current',
                'context': dict(self._context),
            }
        return True

    def action_open_visit(self):
        self.ensure_one()
        if not self.visit_id:
            raise UserError(_("Aún no hay una visita vinculada. Usa 'Iniciar atención'."))
        return {
            'type': 'ir.actions.act_window',
            'name': _('Visita'),
            'res_model': 'animal.visit',
            'view_mode': 'form',
            'res_id': self.visit_id.id,
            'target': 'current',
        }

    def action_pause(self):
        for rec in self:
            if rec.state != 'in_consultation':
                raise UserError(_("Solo se puede pausar cuando está 'En consulta'."))
            rec.state = 'paused'
        return True

    def action_resume(self):
        for rec in self:
            if rec.state != 'paused':
                raise UserError(_("Solo se puede reanudar desde 'Pausado'."))
            rec.state = 'in_consultation'
        return True

    def action_done(self):
        for rec in self:
            if rec.state not in ('in_consultation', 'called', 'paused'):
                raise UserError(_("Solo se puede finalizar cuando el ticket está en consulta/llamado/pausado."))
            rec.write({'state': 'done', 'end_time': fields.Datetime.now()})
        return True

    def action_cancel(self):
        for rec in self:
            if rec.state in ('done',):
                raise UserError(_("No es posible cancelar un ticket ya atendido."))
            rec.state = 'cancelled'
        return True

    def action_reset_to_waiting(self):
        for rec in self:
            rec.write({
                'state': 'waiting',
                'called_time': False,
                'start_time': False,
                'end_time': False,
            })
        return True

    # === Utilidad para acción de servidor "Llamar siguiente" ===
    @api.model
    def action_call_next(self):
        """
        Busca el siguiente ticket en espera por prioridad (desc) y antigüedad,
        lo marca como 'Llamado' y lo abre en formulario.
        """
        ticket = self.search([('state', '=', 'waiting')], order='priority desc, arrival_time asc', limit=1)
        if not ticket:
            # Notificación al usuario
            return {
                'type': 'ir.actions.client',
                'tag': 'display_notification',
                'params': {
                    'title': _('Sala de espera'),
                    'message': _('No hay tickets en espera.'),
                    'sticky': False,
                    'type': 'warning',
                }
            }
        ticket.action_call()
        return {
            'type': 'ir.actions.act_window',
            'name': _('Ticket'),
            'res_model': 'vet.waiting.ticket',
            'view_mode': 'form',
            'res_id': ticket.id,
            'target': 'current',
        }


=== ./models/sterilizations.py ===
from odoo import models, fields, api


class Sterilization(models.Model):
    _name = "animal.sterilization"
    _description = "Registro de esterilizaciones"
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _order = "date desc"

    # ========= Enlaces opcionales =========
    animal_id = fields.Many2one("animal", string="Animal")
    owner_id = fields.Many2one("res.partner", string="Responsable")

    # ========= Datos responsable =========
    date = fields.Date(string="Fecha", tracking=True)
    resp_rut = fields.Char(string="RUT")
    resp_birthdate = fields.Date(string="Fecha de nacimiento (responsable)")
    resp_name = fields.Char(string="Nombre")
    resp_phone1 = fields.Char(string="Teléfono 1")
    resp_phone2 = fields.Char(string="Teléfono 2")
    resp_address = fields.Char(string="Dirección")
    resp_commune = fields.Char(string="Comuna")
    resp_region = fields.Char(string="Región")
    resp_email = fields.Char(string="Mail")
    resp_is_owner = fields.Boolean(string="¿Es dueño/a de la mascota?")

    # ========= Datos Paciente =========
    patient_name = fields.Char(string="Nombre (paciente)")

    # Antes: 'specie' era Selection. Ahora usamos Many2one a animal.specie.
    specie_id = fields.Many2one(
        "animal.specie",
        string="Especie",
        ondelete="restrict",
        tracking=True,
    )

    # Antes: 'breed_text' era Char. Ahora Many2one a animal.breed, filtrada por especie.
    breed_id = fields.Many2one(
        "animal.breed",
        string="Raza",
        domain="[('specie', '=', specie_id)]",
        ondelete="restrict",
        tracking=True,
    )

    patient_birthdate = fields.Date(string="Fecha de Nacimiento")
    sex = fields.Selection([
        ('macho', 'Macho'),
        ('hembra', 'Hembra'),
    ], string="Sexo")
    color = fields.Char(string="Color")
    weight = fields.Float(string="Peso (Kg)")
    pattern = fields.Char(string="Patrón")
    tenancy_type = fields.Selection([
        ('con_dueno', 'Con dueño'),
        ('comunitario', 'Comunitario'),
        ('sin_dueno', 'Sin dueño'),
    ], string="Tipo Tenencia")
    commune_obtention = fields.Char(string="Comuna Obtención")
    animals_at_home = fields.Integer(string="N° total animales en casa")

    obtention = fields.Selection([
        ('compra', 'Compra'),
        ('recogido', 'Recogido'),
        ('nacio_en_casa', 'Nació en casa'),
        ('regalo', 'Regalo'),
        ('adopcion', 'Adopción'),
        ('na', 'N/A'),
    ], string="Obtención")

    tenure_reason = fields.Selection([
        ('asistencia', 'Asistencia'),
        ('compania', 'Compañía'),
        ('deporte', 'Deporte'),
        ('exposicion', 'Exposición'),
        ('reproduccion', 'Reproducción'),
        ('seguridad', 'Seguridad'),
        ('terapia', 'Terapia'),
        ('trabajo', 'Trabajo'),
        ('ns', 'N/S'),
        ('na', 'N/A'),
        ('otro', 'Otro'),
    ], string="Razón tenencia")
    tenure_reason_other = fields.Char(string="Razón tenencia (otro)")
    already_sterilized = fields.Boolean(string="¿Su mascota ya está esterilizada?")
    visited_vet_before = fields.Selection([
        ('si', 'Sí'),
        ('no', 'No'),
        ('ns', 'N/S'),
    ], string="¿Ha asistido antes al Médico Veterinario?")
    microchip_today = fields.Boolean(string="¿El microchip fue implantado hoy?")

    # ========= Procedimiento =========
    procedure_type = fields.Selection([
        ('ovariohisterectomia', 'Ovariohisterectomía'),
        ('orquiectomia', 'Orquiectomía'),
    ], string="Procedimiento")

    ovario_approach = fields.Selection([
        ('linea_alba', 'Línea alba'),
        ('flanco_izquierdo', 'Flanco izquierdo'),
        ('flanco_derecho', 'Flanco derecho'),
        ('mixto', 'Mixto'),
    ], string="Abordaje (Ovariohisterectomía)")

    orchiectomy_type = fields.Selection([
        ('pre_escrotal', 'Pre escrotal'),
        ('escrotal', 'Escrotal'),
        ('pre_escrotal_inguinal', 'Pre escrotal/inguinal'),
        ('escrotal_inguinal', 'Escrotal/inguinal'),
    ], string="Técnica (Orquiectomía)")

    vet_name = fields.Char(string="Nombre M. veterinario/a")
    vet_rut = fields.Char(string="RUT (médico)")
    signature = fields.Binary(string="Firma y timbre")

    # ========= Resultado procedimientos =========
    status = fields.Selection([
        ('exito', 'Finalizado con éxito'),
        ('suspendido', 'Suspendido'),
        ('rechazado', 'Rechazado'),
        ('fallecido', 'Fallecido'),
    ], string="Estado")
    death_cause = fields.Char(string="Causa defunción")
    death_moment = fields.Selection([
        ('pre_operatorio', 'Pre operatorio'),
        ('cirugia', 'Cirugía'),
        ('post_operatorio', 'Post operatorio'),
        ('casa', 'Casa'),
    ], string="Momento de defunción")
    death_date = fields.Date(string="Fecha defunción")

    # ========= Utilidad / etiquetas =========
    notes = fields.Text(string="Notas")

    # ====== Al elegir Animal, autocompletar DATOS PACIENTE (y sugerir Responsable) ======
    @api.onchange('animal_id')
    def _onchange_animal_id_fill_species_breed(self):
        """
        Autocompleta:
          - patient_name         <- animal.name
          - specie_id            <- animal.species
          - breed_id             <- animal.breed (si coincide la especie)
          - patient_birthdate    <- animal.birthdate
          - sex                  <- mapea animal.sex (male/female) -> (macho/hembra)
          - color                <- nombres de animal.tags unidos por coma (si existen)
          - weight               <- animal.weight
        Además sugiere:
          - owner_id             <- animal.owner
          - already_sterilized   <- True si animal.reproductive_status == 'neutered'
        """
        sex_map = {'male': 'macho', 'female': 'hembra'}
        for rec in self:
            if not rec.animal_id:
                # Si se deselecciona el animal, no tocamos los campos existentes.
                continue

            animal = rec.animal_id

            # Nombre del paciente
            rec.patient_name = animal.name or False

            # Especie del paciente
            rec.specie_id = animal.species.id or False

            # Raza: solo si coincide con la especie elegida
            if animal.breed and (not rec.specie_id or animal.breed.specie.id == rec.specie_id.id):
                rec.breed_id = animal.breed.id
            else:
                rec.breed_id = False

            # Fecha de nacimiento
            rec.patient_birthdate = animal.birthdate or False

            # Sexo (mapeo)
            rec.sex = sex_map.get(animal.sex, False)

            # Color (unimos etiquetas por nombre si existen)
            if animal.tags:
                rec.color = ", ".join(animal.tags.mapped('name'))
            else:
                rec.color = False

            # Peso
            rec.weight = animal.weight or False

            # Sugerir responsable desde el dueño del animal (si existe)
            rec.owner_id = animal.owner.id if animal.owner else False

            # Autocompletar si ya está esterilizado (desde estado reproductivo del animal)
            if animal.reproductive_status:
                rec.already_sterilized = (animal.reproductive_status == 'neutered')
            else:
                rec.already_sterilized = False


=== ./models/insurances.py ===
from odoo import models, fields, api

class Insurance(models.Model):
    _name = "animal.insurance"
    _description = "Animals insurances table"

    name = fields.Char(string="Seguro", required=True)
    characteristics = fields.Text(string="Características")
    cost = fields.Integer(string="Costo")


=== ./models/partner_pet.py ===
from odoo import fields, models, api
from odoo.exceptions import UserError

class Pet(models.Model):
    _inherit = "res.partner"

    pet = fields.One2many("animal", "owner", string="Pet")


=== ./models/animals.py ===
from odoo import models, fields, api
from odoo.exceptions import UserError


class Animal(models.Model):
    _name = "animal"
    _description = "Animals table"
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _order = "identification desc"

    name = fields.Char(string="Nombre", required=True)
    sex = fields.Selection([
        ('male', 'Masculino'),
        ('female', 'Femenino')
    ], string="Sexo", default="male")
    birthdate = fields.Date(string="Fecha de Nacimiento")
    # NUEVOS CAMPOS
    age = fields.Integer(string="Edad")
    reproductive_status = fields.Selection([
        ('neutered', 'Esterilizado'),
        ('entire', 'Entero'),
    ], string="Esterilizado/Entero")
    microchip_number = fields.Char(string="N° de microchip")

    photo = fields.Binary(string="Foto")
    breed = fields.Many2one("animal.breed", string="Raza")
    species = fields.Many2one("animal.specie", string="Especie", required=True)
    owner = fields.Many2one('res.partner', string="Dueño", store=True)
    weight = fields.Float(string="Peso")
    height = fields.Float(string="Altura")
    size = fields.Selection([
        ('small', 'Pequeño'),
        ('medium', 'Mediano'),
        ('large', 'Grande'),
    ], string="Tamaño", default='small')
    medicines = fields.Many2many("animal.medicine", string="Medicamentos", relation="animal_medicine_rel")

    # Antes: relación simple Many2many sin detalles.
    # Ahora: mantenemos 'vaccines' como campo calculado (solo lectura) para
    # mostrar el listado de vacunas únicas aplicadas, basado en 'vaccination_ids'.
    vaccines = fields.Many2many(
        "animal.vaccine",
        string="Vacunas",
        relation="animal_vaccine_rel",
        compute="_compute_vaccines",
        store=True,
        readonly=True,
    )
    # NUEVO: líneas de vacunación con detalles
    vaccination_ids = fields.One2many(
        "animal.vaccination",
        "animal_id",
        string="Vacunaciones"
    )

    # ===== NUEVO BLOQUE: Desparasitaciones =====
    dewormers = fields.Many2many(
        "animal.dewormer",
        string="Desparasitantes",
        relation="animal_dewormer_rel",
        compute="_compute_dewormers",
        store=True,
        readonly=True,
    )
    deworming_ids = fields.One2many(
        "animal.deworming",
        "animal_id",
        string="Desparasitaciones"
    )

    diseases = fields.Many2many("animal.disease", string="Enfermedades", relation="animal_disease_rel")
    allergies = fields.Many2many("animal.allergy", string="Alergias", relation="animal_allergy_rel")
    surgeries = fields.Many2many("animal.surgery", string="Cirugías", relation="animal_surgery_rel")
    visit_ids = fields.One2many('animal.visit', 'animal_id', string='Visitas')
    active = fields.Boolean(string="Activo", default=True)
    tags = fields.Many2many("animal.tag", string="Etiquetas", relation="animal_tag_rel")
    insurance = fields.Many2one("animal.insurance", string="Seguro", relation="animal_insurance_rel")
    identification = fields.Char(string="ID", required=True, copy=False, readonly=True, index=True, default=lambda self: 'Nuevo')
    internal_notes = fields.Text(string="Notas")
    quote_count = fields.Integer(string="Presupuestos", compute="_compute_quote_count")
    invoice_count = fields.Integer(string="Facturas", compute="_compute_invoice_count")
    visit_count = fields.Integer(string="Visitas", compute="_compute_visit_count")

    # ===== NUEVOS CAMPOS SOLICITADOS (se guardan en BD) =====
    character = fields.Char(string="Carácter")
    habitat = fields.Char(string="Hábitat")
    treating_doctor = fields.Char(string="Médico tratante")
    hair_type = fields.Char(string="Tipo de pelo")
    diet = fields.Char(string="Dieta")

    @api.model
    def create(self, vals):
        if vals.get('identification', 'Nuevo') == 'Nuevo':
            vals['identification'] = self.env['ir.sequence'].next_by_code('animal.identification') or 'Nuevo'
        return super(Animal, self).create(vals)

    @api.depends('vaccination_ids.vaccine_id')
    def _compute_vaccines(self):
        for record in self:
            vaccine_ids = record.vaccination_ids.mapped('vaccine_id').ids if record.vaccination_ids else []
            record.vaccines = [(6, 0, vaccine_ids)]

    @api.depends('deworming_ids.dewormer_id')
    def _compute_dewormers(self):
        for record in self:
            dewormer_ids = record.deworming_ids.mapped('dewormer_id').ids if record.deworming_ids else []
            record.dewormers = [(6, 0, dewormer_ids)]

    @api.depends('owner')
    def _compute_quote_count(self):
        for record in self:
            if record.owner:
                record.quote_count = self.env['sale.order'].search_count([('partner_id', '=', record.owner.id)])
            else:
                record.quote_count = 0

    @api.depends('owner')
    def _compute_invoice_count(self):
        for record in self:
            if record.owner:
                record.invoice_count = self.env['account.move'].search_count([('partner_id', '=', record.owner.id)])
            else:
                record.invoice_count = 0

    @api.depends('owner')
    def _compute_visit_count(self):
        for record in self:
            if record.id:
                record.visit_count = self.env['animal.visit'].search_count([('animal_id', '=', record.id)])
            else:
                record.visit_count = 0

    def action_view_quotes(self):
        # Obtener el ID del partner asociado
        partner_id = self.owner.id

        return {
            'name': 'Presupuestos',
            'type': 'ir.actions.act_window',
            'view_mode': 'tree,form',
            'res_model': 'sale.order',
            'domain': [('partner_id', '=', partner_id)],
            'context': dict(self._context),
        }

    def action_view_invoices(self):
        # Obtener el ID del partner asociado
        partner_id = self.owner.id

        return {
            'name': 'Facturas',
            'type': 'ir.actions.act_window',
            'view_mode': 'tree,form',
            'res_model': 'account.move',
            'domain': [('partner_id', '=', partner_id)],
            'context': dict(self._context),
        }

    def action_view_visits(self):
        # Obtener el ID del partner asociado
        animal = self.id

        return {
            'name': 'Visitas',
            'type': 'ir.actions.act_window',
            'view_mode': 'tree,form',
            'res_model': 'animal.visit',
            'domain': [('animal_id', '=', animal)],
            'context': dict(self._context),
        }

    def action_create_quote(self):
        # Asegurarse de que el animal tiene un dueño
        if not self.owner:
            raise UserError('This animal does not have an owner defined.')

        return {
            'type': 'ir.actions.act_window',
            'name': 'Nuevo Presupuesto',
            'res_model': 'sale.order',
            'view_mode': 'form',
            'target': 'current',
            'context': {
                'default_partner_id': self.owner.id,  # Prellenar el cliente con el dueño del animal
            },
        }

=== ./models/consents.py ===
from odoo import models, fields, api


class Consent(models.Model):
    _name = "animal.consent"
    _description = "Consentimientos informados"
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _order = "date desc, sequence desc"

    # Identificador / referencia
    sequence = fields.Char(
        string="Referencia",
        required=True,
        copy=False,
        readonly=True,
        index=True,
        default=lambda self: 'Nuevo',
        tracking=True
    )

    # Enlaces
    animal_id = fields.Many2one(
        'animal',
        string='Animal',
        required=True,
        tracking=True,
    )
    owner_id = fields.Many2one(
        related='animal_id.owner',
        string="Dueño",
        store=True,
        readonly=True
    )

    # Datos del paciente (solo lectura para filtros/listados e impresión)
    specie_id = fields.Many2one(
        related='animal_id.species',
        string='Especie',
        store=True,
        readonly=True
    )
    breed_id = fields.Many2one(
        related='animal_id.breed',
        string='Raza',
        store=True,
        readonly=True
    )
    sex = fields.Selection(
        related='animal_id.sex',
        string='Sexo',
        store=True,
        readonly=True
    )
    microchip_number = fields.Char(
        related='animal_id.microchip_number',
        string="N° de microchip",
        store=True,
        readonly=True
    )

    # Datos del consentimiento
    date = fields.Datetime(
        string="Fecha",
        required=True,
        default=fields.Datetime.now,
        tracking=True,
    )
    consent_type = fields.Selection([
        ('anesthesia', 'Anestesia / Sedación'),
        ('surgery', 'Cirugía / Procedimiento Quirúrgico'),
        ('procedure', 'Procedimiento / Examen'),
        ('hospitalization', 'Hospitalización'),
        ('euthanasia', 'Eutanasia'),
        ('treatment', 'Tratamiento'),
        ('other', 'Otro'),
    ], string="Tipo de consentimiento", tracking=True)

    consent_title = fields.Char(string="Título (impresión)", help="Título que saldrá en el PDF (opcional). Si lo dejas vacío, se usará el tipo de consentimiento.")
    description = fields.Text(string="Descripción del procedimiento / motivo")
    risks = fields.Text(string="Riesgos y posibles complicaciones")
    post_instructions = fields.Text(string="Instrucciones postprocedimiento")

    # Firmas y datos de participantes
    doctor_name = fields.Char(string="Nombre M. Veterinario/a")
    doctor_rut = fields.Char(string="RUT (médico)")
    doctor_signature = fields.Binary(string="Firma Médico/a")
    owner_signature = fields.Binary(string="Firma Propietario/a")

    # Estado del consentimiento
    state = fields.Selection([
        ('draft', 'Borrador'),
        ('signed', 'Firmado'),
        ('cancelled', 'Cancelado'),
    ], string="Estado", default='draft', tracking=True)

    # Auxiliares
    notes = fields.Text(string="Notas internas")

    @api.model
    def create(self, vals):
        if vals.get('sequence', 'Nuevo') == 'Nuevo':
            vals['sequence'] = self.env['ir.sequence'].next_by_code('animal.consent.sequence') or 'Nuevo'
        return super(Consent, self).create(vals)

    @api.onchange('animal_id')
    def _onchange_animal_id_set_doctor(self):
        """
        Si el animal tiene 'médico tratante', sugerirlo como doctor_name.
        """
        for rec in self:
            if rec.animal_id and rec.animal_id.treating_doctor and not rec.doctor_name:
                rec.doctor_name = rec.animal_id.treating_doctor

    # Acciones de estado
    def action_confirm(self):
        self.write({'state': 'signed'})
        return True

    def action_cancel(self):
        self.write({'state': 'cancelled'})
        return True

    def action_reset_to_draft(self):
        self.write({'state': 'draft'})
        return True


=== ./models/exam_orders.py ===
from odoo import models, fields, api


class ExamOrder(models.Model):
    _name = "animal.exam.order"
    _description = "Órdenes de Exámenes"
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _order = "date desc, sequence desc"

    # Identificador / referencia
    sequence = fields.Char(
        string="Referencia",
        required=True,
        copy=False,
        readonly=True,
        index=True,
        default=lambda self: 'Nuevo',
        tracking=True
    )

    # Enlaces
    animal_id = fields.Many2one(
        'animal',
        string='Animal',
        required=True,
        tracking=True,
    )
    owner_id = fields.Many2one(
        related='animal_id.owner',
        string="Dueño",
        store=True,
        readonly=True
    )

    # Datos del paciente (de solo lectura para filtros/listados)
    specie = fields.Many2one(
        related='animal_id.species',
        string='Especie',
        store=True,
        readonly=True
    )
    breed = fields.Many2one(
        related='animal_id.breed',
        string='Raza',
        store=True,
        readonly=True
    )
    sex = fields.Selection(
        related='animal_id.sex',
        string='Sexo',
        store=True,
        readonly=True
    )

    # Datos de la orden
    date = fields.Datetime(
        string="Fecha",
        required=True,
        default=fields.Datetime.now,
        tracking=True,
    )
    doctor = fields.Char(string="Dr/Dra")
    exam_type = fields.Selection([
        ('hemograma', 'Hemograma'),
        ('perfil_bioquimico', 'Perfil bioquímico'),
        ('orina', 'Orina (EGO)'),
        ('coproparasitario', 'Coproparasitológico'),
        ('radiografia', 'Radiografía'),
        ('ecografia', 'Ecografía'),
        ('citologia', 'Citología'),
        ('biopsia', 'Biopsia'),
        ('otro', 'Otro'),
    ], string="Tipo de examen", tracking=True)
    exam_type_other = fields.Char(string="Otro (especificar)")
    priority = fields.Selection([
        ('normal', 'Normal'),
        ('alta', 'Alta'),
        ('urgente', 'Urgente'),
    ], string="Prioridad", default='normal', tracking=True)

    state = fields.Selection([
        ('draft', 'Borrador'),
        ('ordered', 'Ordenado'),
        ('done', 'Completado'),
        ('cancelled', 'Cancelado'),
    ], string="Estado", default='draft', tracking=True)

    notes = fields.Text(string="Notas/Indicaciones")
    results = fields.Text(string="Resultados")

    # Adjuntos opcionales (además de los de chatter)
    attachment_ids = fields.Many2many(
        'ir.attachment',
        'animal_exam_order_ir_attachments_rel',
        'order_id',
        'attachment_id',
        string="Adjuntos"
    )

    @api.model
    def create(self, vals):
        if vals.get('sequence', 'Nuevo') == 'Nuevo':
            vals['sequence'] = self.env['ir.sequence'].next_by_code('animal.exam.order.sequence') or 'Nuevo'
        return super(ExamOrder, self).create(vals)

    # Acciones de estado
    def action_confirm(self):
        self.write({'state': 'ordered'})
        return True

    def action_done(self):
        self.write({'state': 'done'})
        return True

    def action_cancel(self):
        self.write({'state': 'cancelled'})
        return True

    def action_reset_to_draft(self):
        self.write({'state': 'draft'})
        return True


=== ./models/visits.py ===
from odoo import fields, models, api

class Visit(models.Model):
    _name = "animal.visit"
    _description = "Animals visits table"
    _inherit = ['mail.thread', 'mail.activity.mixin']
    _order = "date desc"

    animal_id = fields.Many2one('animal', string='Animal', required=True)  # Campo de relación Many2one con animal
    date = fields.Datetime(string="Fecha", required=True)
    name = fields.Char(related="animal_id.name", string="Animal", required=True, readonly=False)
    owner = fields.Many2one(related="animal_id.owner", string="Dueño", readonly=True, store=True)
    sex = fields.Selection(related="animal_id.sex", string="Sexo", readonly=True, store=True)
    breed = fields.Many2one(related="animal_id.breed", string="Raza", readonly=True, store=True)
    specie = fields.Many2one(related="animal_id.species", string="Especie", readonly=True, store=True)

    # ---- CAMPO(S) HISTÓRICOS (se mantienen por compatibilidad) ----
    reason = fields.Text(string="Razón")
    suggested_treatment = fields.Text(string="Tratamiento sugerido")
    observations = fields.Text(string="Observaciones")

    # ---- NUEVOS CAMPOS SOLICITADOS ----
    consultation_reason = fields.Text(string="Motivo de consulta")
    anamnesis = fields.Text(string="Anamnesis Remota y Actual")
    clinical_exam = fields.Text(string="Examen Clínico")
    prediagnoses = fields.Text(string="Prediagnósticos")
    treatment = fields.Text(string="Tratamiento")
    rp = fields.Text(string="Rp")
    follow_up = fields.Text(string="Control")

    # ---- NUEVO CAMPO: MÉDICO RESPONSABLE ----
    doctor = fields.Char(string="Dr/Dra")  # mostrado a la derecha de "Fecha" en el formulario

    sequence = fields.Char(
        string="Referencia",
        required=True,
        copy=False,
        readonly=True,
        index=True,
        default=lambda self: 'Nuevo'
    )

    @api.model
    def create(self, vals):
        if vals.get('sequence', 'Nuevo') == 'Nuevo':
            vals['sequence'] = self.env['ir.sequence'].next_by_code('animal.visit.sequence') or 'Nuevo'
        return super(Visit, self).create(vals)

=== ./models/surgeries.py ===
from odoo import models, fields, api

class Surgery(models.Model):
    _name = "animal.surgery"
    _description = "Animal surgeries table"

    name = fields.Char(string="Cirugía", required=True)
    observations = fields.Text(string="Observaciones")


=== ./models/medicines.py ===
from odoo import models, fields, api

class Medicine(models.Model):
    _name = "animal.medicine"
    _description = "Animal medicines table"

    name = fields.Char(string="Medicamento",required=True)
    description = fields.Text(string="Descripción")


=== ./models/allergies.py ===
from odoo import models, fields, api

class Allergy(models.Model):
    _name = "animal.allergy"
    _description = "Animal allergies table"

    name = fields.Char(string="Alergia", required=True)
    description = fields.Text(string="Descripción")


=== ./__init__.py ===
# -*- coding: utf-8 -*-

from . import controllers
from . import models
from . import report

=== ./report/report_exam_order.py ===
# -*- coding: utf-8 -*-
from odoo import models
from odoo.tools import file_open
import base64


class ReportExamOrder(models.AbstractModel):
    _name = 'report.vet.report_exam_order'
    _description = 'Report Exam Order (PDF)'

    def _get_report_values(self, docids, data=None):
        docs = self.env['animal.exam.order'].browse(docids)

        header_b64 = False
        # Reutilizamos el header de "visita" si existe en el módulo
        try:
            with file_open('vet/static/src/img/visita_header.png', 'rb') as f:
                header_b64 = base64.b64encode(f.read()).decode('utf-8')
        except Exception:
            header_b64 = False

        return {
            'doc_ids': docs.ids,
            'doc_model': 'animal.exam.order',
            'docs': docs,
            'exam_header_image': header_b64,
        }


=== ./report/consent_report.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- Paperformat SIN header reservado (Odoo 17) -->
    <record id="paperformat_consent_noheader" model="report.paperformat">
      <field name="name">Consent PDF (no header)</field>
      <field name="format">A4</field>
      <field name="orientation">Portrait</field>
      <field name="margin_top">6</field>
      <field name="margin_bottom">8</field>
      <field name="margin_left">10</field>
      <field name="margin_right">10</field>
      <field name="header_line">False</field>
      <field name="header_spacing">0</field>
    </record>

    <!-- Acción de reporte PDF -->
    <record id="action_report_consent" model="ir.actions.report">
      <field name="name">Consentimiento Informado</field>
      <field name="model">animal.consent</field>
      <field name="report_type">qweb-pdf</field>
      <field name="report_name">vet.report_consent</field>
      <field name="report_file">vet.report_consent</field>
      <field name="paperformat_id" ref="vet.paperformat_consent_noheader"/>
      <field name="print_report_name">
        (object.sequence or 'Consentimiento') + ' - ' + (dict(object._fields['consent_type'].selection).get(object.consent_type) if object.consent_type else (object.consent_title or 'Documento')) + '.pdf'
      </field>
    </record>

    <!-- Contenedor por registro -->
    <template id="report_consent">
      <t t-call="web.html_container">
        <t t-foreach="docs" t-as="doc">
          <t t-call="vet.report_consent_document"/>
          <div class="pagebreak"/>
        </t>
      </t>
    </template>

    <!-- Documento -->
    <template id="report_consent_document">
      <t t-set="o" t-value="doc"/>
      <t t-call="web.external_layout">
        <style type="text/css">
          .cst * { font-size: 12px; font-family: "DejaVu Sans", sans-serif; }
          .cst .title { font-size: 18px; font-weight: 700; text-align:center; }
          .cst .subtitle { font-size: 12px; text-align:center; }
          .cst table { width: 100%; border-collapse: collapse; }
          .cst th, .cst td { border: 0; padding: 4px 6px; vertical-align: top; }
          .cst .section { font-weight: 700; text-align:center; border: 1px solid #000; background: #f3f3f3; }
          .cst .boxed { border: 1px solid #000; }
          .cst .label { width: 22%; white-space: nowrap; }
          .cst .val { width: 28%; border-bottom: 1px solid #000; }
          .cst .val2 { border-bottom: 1px solid #000; }
          .cst .muted { color:#666; }
          .cst .header-strip { margin-bottom: 4px; }
          .cst .header-image { max-width: 100%; height: auto; display: block; margin: 0 auto; }
          .cst .header-date { text-align: right; margin: 2px 0 6px; }
          .cst .small { font-size: 11px; }

          /* Firmas: columnas sin bordes */
          .cst .signrow { display: table; width: 100%; margin-top: 28px; }
          .cst .signcol { display: table-cell; width: 50%; padding: 0 6px; vertical-align: top; }
          .cst .signbox { text-align: center; padding-top: 90px; min-height: 130px; }
          .cst .sigline { border-top: 1px solid #000; margin: 0 10% 6px; }
          .cst .siglabel { font-size: 12px; }

          /* Ocultar pie y header estándar SOLO en este reporte */
          .footer,
          .o_footer,
          .o_report_layout_standard .footer,
          .o_report_layout_boxed .footer,
          .o_report_layout_bold .footer,
          .header,
          .o_header,
          .o_report_layout_standard .header,
          .o_report_layout_boxed .header,
          .o_report_layout_bold .header {
            display: none !important;
            visibility: hidden !important;
            height: 0 !important;
            margin: 0 !important;
            padding: 0 !important;
            border: 0 !important;
          }
          .footer * { border: 0 !important; }
        </style>

        <div class="cst">

          <!-- Cabecera con imagen -->
          <div class="header-strip">
            <img class="header-image"
                 t-if="consent_header_image"
                 t-att-src="'data:image/png;base64,%s' % (consent_header_image)"
                 alt="Encabezado"/>
          </div>

          <!-- Fecha + Título -->
          <div class="header-date">
            Fecha:
            <span class="val2">
              <span t-field="o.date" t-options='{"widget": "date"}'/>
            </span>
          </div>

          <div class="title" style="margin:6px 0;">
            <!-- Título requerido: 'Consentimiento ' + etiqueta del tipo seleccionado -->
            <t t-esc="'Consentimiento ' + dict(o._fields['consent_type'].selection).get(o.consent_type) if o.consent_type else 'Consentimiento'"/>
          </div>

          <!-- Información del propietario -->
          <table class="boxed" style="margin-top:6px;">
            <tr>
              <th class="section" colspan="4">Información del propietario</th>
            </tr>
            <tr>
              <td class="label">Nombre completo :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.name or '')"/>
              </td>
              <td class="label">RUT :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.vat or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Teléfono :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.phone or o.owner_id.mobile or '')"/>
              </td>
              <td class="label">Correo :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.email or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Dirección :</td>
              <td class="val" colspan="3">
                <t t-esc="o.owner_id and (o.owner_id.street or '')"/>
              </td>
            </tr>
          </table>

          <!-- Información del paciente -->
          <table class="boxed" style="margin-top:8px;">
            <tr>
              <th class="section" colspan="6">Información del paciente</th>
            </tr>
            <tr>
              <td class="label">Nombre:</td>
              <td class="val">
                <t t-esc="o.animal_id and (o.animal_id.name or '')"/>
              </td>
              <td class="label">Especie (C/F):</td>
              <td class="val">
                <t t-esc="o.specie_id and o.specie_id.name or ''"/>
              </td>
              <td class="label">N° de Microchip:</td>
              <td class="val">
                <t t-esc="o.microchip_number or ''"/>
              </td>
            </tr>
            <tr>
              <td class="label">Sexo:</td>
              <td class="val">
                <t t-esc="({'male':'Masculino','female':'Femenino'}).get(o.sex) if o.sex else ''"/>
              </td>
              <td class="label">Raza:</td>
              <td class="val">
                <t t-esc="o.breed_id and o.breed_id.name or ''"/>
              </td>
              <td class="label"></td>
              <td class="val"></td>
            </tr>
          </table>

          <!-- Descripción del procedimiento -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Descripción del procedimiento / motivo</th></tr>
            <tr>
              <td class="val2" style="height: 110px;">
                <t t-esc="o.description or ''"/>
              </td>
            </tr>
          </table>

          <!-- Riesgos -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Riesgos y posibles complicaciones</th></tr>
            <tr>
              <td class="val2" style="height: 110px;">
                <t t-esc="o.risks or ''"/>
              </td>
            </tr>
          </table>

          <!-- Instrucciones Postprocedimiento -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Instrucciones postprocedimiento</th></tr>
            <tr>
              <td class="val2" style="height: 84px;">
                <t t-esc="o.post_instructions or ''"/>
              </td>
            </tr>
          </table>

          <!-- Datos del profesional -->
          <table class="boxed" style="margin-top:8px;">
            <tr>
              <th class="section" colspan="4">Profesional responsable</th>
            </tr>
            <tr>
              <td class="label">Nombre M. Veterinario/a:</td>
              <td class="val">
                <t t-esc="o.doctor_name or ''"/>
              </td>
              <td class="label">RUT:</td>
              <td class="val">
                <t t-esc="o.doctor_rut or ''"/>
              </td>
            </tr>
          </table>

          <!-- Firmas (propietario y médico) -->
          <div class="signrow">
            <div class="signcol">
              <div class="signbox">
                <div t-if="o.owner_signature" class="center">
                  <img t-att-src="image_data_uri(o.owner_signature)" style="max-height:90px;"/>
                </div>
                <div class="sigline"></div>
                <div class="siglabel">FIRMA PROPIETARIO/A</div>
              </div>
            </div>
            <div class="signcol">
              <div class="signbox">
                <div t-if="o.doctor_signature" class="center">
                  <img t-att-src="image_data_uri(o.doctor_signature)" style="max-height:90px;"/>
                </div>
                <div class="sigline"></div>
                <div class="siglabel">FIRMA MÉDICO VETERINARIO</div>
              </div>
            </div>
          </div>

          <div class="small muted" style="margin-top:6px;">
            Ref.: <t t-esc="o.sequence or ''"/> — Paciente: <t t-esc="o.animal_id and o.animal_id.name or ''"/>
          </div>
        </div>
      </t>
    </template>

  </data>
</odoo>

=== ./report/report_sterilization.py ===
# -*- coding: utf-8 -*-
from odoo import models
from odoo.tools import file_open
import base64

class ReportSterilization(models.AbstractModel):
    _name = 'report.vet.report_sterilization'
    _description = 'Report Sterilization (PDF)'

    def _get_report_values(self, docids, data=None):
        docs = self.env['animal.sterilization'].browse(docids)

        img_b64 = False
        # Intentamos primero el header específico de esterilización
        paths_to_try = [
            'vet/static/src/img/sterilizacion_header.png',
            # fallback por si se usa el mismo header de "visita"
            'vet/static/src/img/visita_header.png',
        ]
        for p in paths_to_try:
            try:
                with file_open(p, 'rb') as f:
                    img_b64 = base64.b64encode(f.read()).decode('utf-8')
                    if img_b64:
                        break
            except Exception:
                continue

        return {
            'doc_ids': docs.ids,
            'doc_model': 'animal.sterilization',
            'docs': docs,
            # Imagen para el template en data URI
            'stz_title_image': img_b64,
        }


=== ./report/__init__.py ===
# -*- coding: utf-8 -*-
from . import report_sterilization
from . import report_visit
from . import report_exam_order
from . import report_vaccination
from . import report_consent

=== ./report/visit_report.xml ===
<odoo>
  <data>

    <!-- ===== Paperformat SIN header reservado para este reporte (Odoo 17) ===== -->
    <record id="paperformat_visit_noheader" model="report.paperformat">
      <field name="name">Visit PDF (no header)</field>
      <field name="format">A4</field>
      <field name="orientation">Portrait</field>
      <!-- Márgenes ajustados: sin header, dejamos un top pequeño -->
      <field name="margin_top">6</field>
      <field name="margin_bottom">8</field>
      <field name="margin_left">10</field>
      <field name="margin_right">10</field>
      <!-- Clave: no reservar espacio de encabezado -->
      <field name="header_line">False</field>
      <field name="header_spacing">0</field>
    </record>

    <!-- Acción de reporte PDF -->
    <record id="action_report_visit" model="ir.actions.report">
      <field name="name">Ficha Atención Veterinaria</field>
      <field name="model">animal.visit</field>
      <field name="report_type">qweb-pdf</field>
      <field name="report_name">vet.report_visit</field>
      <field name="report_file">vet.report_visit</field>
      <!-- Usamos el paperformat sin header -->
      <field name="paperformat_id" ref="vet.paperformat_visit_noheader"/>
      <field name="print_report_name">
        (object.sequence or 'Visita') + ' - Ficha de Atención.pdf'
      </field>
    </record>

    <!-- Contenedor por registro -->
    <template id="report_visit">
      <t t-call="web.html_container">
        <t t-foreach="docs" t-as="doc">
          <t t-call="vet.report_visit_document"/>
          <div class="pagebreak"/>
        </t>
      </t>
    </template>

    <!-- Plantilla del documento -->
    <template id="report_visit_document">
      <t t-set="o" t-value="doc"/>
      <t t-call="web.external_layout">
        <style type="text/css">
          .visit * { font-size: 12px; }
          .visit .title { font-size: 18px; font-weight: 700; text-align:center; }
          .visit .subtitle { font-size: 12px; text-align:center; }
          .visit table { width: 100%; border-collapse: collapse; }
          .visit th, .visit td { border: 0; padding: 4px 6px; vertical-align: top; }
          .visit .section { font-weight: 700; text-align:center; border: 1px solid #000; background: #f3f3f3; }
          .visit .boxed { border: 1px solid #000; }
          .visit .rowline td { border-bottom: 1px solid #000; }
          .visit .label { width: 22%; white-space: nowrap; }
          .visit .val { width: 28%; border-bottom: 1px solid #000; }
          .visit .val2 { border-bottom: 1px solid #000; }
          .visit .muted { color:#666; }
          .visit .logo-box { border:1px solid #000; height:55px; text-align:center; }
          .visit .lines { height: 84px; border-bottom: 1px solid #000; }
          .visit .lines.tall { height: 110px; }

          /* === ESPACIO PARA FIRMAR + LÍNEA JUSTO SOBRE EL TEXTO === */
          .visit .signbox {
            text-align: center;
            padding-top: 80px;
            min-height: 110px;
          }
          .visit .sigline {
            border-top: 1px solid #000;
            margin: 0 6px 6px;
          }
          .visit .siglabel {
            font-size: 11px;
          }

          .visit .col2 { width:50%; }
          .visit .small { font-size: 11px; }

          /* ====== Layout de firmas SIN tablas (evita cualquier recuadro) ====== */
          .visit .signrow { display: table; width: 100%; margin-top: 28px; border: 0 !important; }
          .visit .signcol { display: table-cell; width: 50%; padding: 0 6px; vertical-align: top; border: 0 !important; }
          .visit .signrow *, .visit .signrow { outline: none !important; }

          /* ====== Encabezado con imagen ====== */
          .visit .header-strip { margin-bottom: 4px; }
          .visit .header-image {
            max-width: 100%;
            height: auto;
            display: block;
            margin: 0 auto;
          }
          .visit .header-date { text-align: right; margin: 2px 0 6px; }

          /* ====== Franja decorativa BAJO el título ====== */
          .visit .divider-strip { margin: 4px 0 10px; }
          .visit .divider-image {
            max-width: 100%;
            height: auto;       /* se ve tal cual, sin deformar */
            display: block;
            margin: 0 auto;
          }

          /* ===== Ocultar el pie y el header estándar SOLO en este reporte ===== */
          .footer,
          .o_footer,
          .o_report_layout_standard .footer,
          .o_report_layout_boxed .footer,
          .o_report_layout_bold .footer,
          .header,
          .o_header,
          .o_report_layout_standard .header,
          .o_report_layout_boxed .header,
          .o_report_layout_bold .header {
            display: none !important;
            visibility: hidden !important;
            height: 0 !important;
            margin: 0 !important;
            padding: 0 !important;
            border: 0 !important;
          }
          .footer * { border: 0 !important; }
        </style>

        <div class="visit">

          <!-- Cabecera: imagen adjunta (tal cual) + fecha -->
          <div class="header-strip">
            <img class="header-image"
                 t-if="visit_header_image"
                 t-att-src="'data:image/png;base64,%s' % (visit_header_image)"
                 alt="Encabezado Veterinaria Municipal de Melipilla"/>
          </div>
          <div class="header-date">
            Fecha:
            <span class="val2">
              <span t-field="o.date" t-options='{"widget": "date"}'/>
            </span>
          </div>

          <div class="title" style="margin:6px 0;">FICHA ATENCIÓN VETERINARIA</div>

          <!-- === Franja/imagen justo DEBAJO del título === -->
          <div class="divider-strip">
            <img class="divider-image"
                 t-if="visit_divider_image"
                 t-att-src="'data:image/png;base64,%s' % (visit_divider_image)"
                 alt="Franja decorativa"/>
          </div>

          <!-- Información del propietario -->
          <table class="boxed" style="margin-top:6px;">
            <tr>
              <th class="section" colspan="4">Información del propietario</th>
            </tr>
            <tr>
              <td class="label">Nombre completo :</td>
              <td class="val">
                <t t-esc="o.owner and (o.owner.name or '')"/>
              </td>
              <td class="label">RUT :</td>
              <td class="val">
                <t t-esc="o.owner and (o.owner.vat or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Teléfono :</td>
              <td class="val">
                <t t-esc="o.owner and (o.owner.phone or o.owner.mobile or '')"/>
              </td>
              <td class="label">Correo :</td>
              <td class="val">
                <t t-esc="o.owner and (o.owner.email or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Dirección :</td>
              <td class="val" colspan="3">
                <t t-esc="o.owner and (o.owner.street or '')"/>
              </td>
            </tr>
          </table>

          <!-- Información del paciente -->
          <table class="boxed" style="margin-top:8px;">
            <tr>
              <th class="section" colspan="6">Información del paciente</th>
            </tr>
            <tr>
              <td class="label">Nombre:</td>
              <td class="val">
                <t t-esc="o.animal_id and (o.animal_id.name or '')"/>
              </td>
              <td class="label">Especie (C/F):</td>
              <td class="val">
                <t t-esc="o.specie and o.specie.name or ''"/>
              </td>
              <td class="label">N° de Microchip:</td>
              <td class="val">
                <t t-esc="o.animal_id and (o.animal_id.microchip_number or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Sexo:</td>
              <td class="val">
                <t t-esc="({'male':'Masculino','female':'Femenino'}).get(o.animal_id.sex) if o.animal_id else ''"/>
              </td>
              <td class="label">Raza:</td>
              <td class="val">
                <t t-esc="o.breed and o.breed.name or (o.animal_id and (o.animal_id.breed and o.animal_id.breed.name) or '')"/>
              </td>
              <td class="label">Color:</td>
              <td class="val">
                <t t-if="o.animal_id and o.animal_id.tags">
                  <t t-foreach="o.animal_id.tags" t-as="c">
                    <t t-esc="c.name"/><t t-if="c != o.animal_id.tags[-1]">, </t>
                  </t>
                </t>
              </td>
            </tr>
            <tr>
              <td class="label">Edad:</td>
              <td class="val">
                <t t-esc="o.animal_id and (o.animal_id.age is not False and o.animal_id.age or '')"/>
              </td>
              <td class="label">Esterilizado/Entero:</td>
              <td class="val">
                <t t-esc="({'neutered':'Esterilizado','entire':'Entero'}).get(o.animal_id.reproductive_status) if o.animal_id else ''"/>
              </td>
              <td class="label"></td>
              <td class="val"></td>
            </tr>
          </table>

          <!-- Motivo de consulta -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Motivo de consulta:</th></tr>
            <tr><td class="lines tall"><t t-esc="o.consultation_reason or ''"/></td></tr>
          </table>

          <!-- Anamnesis Remota y Actual -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Anamnesis Remota y Actual:</th></tr>
            <tr><td class="lines tall"><t t-esc="o.anamnesis or ''"/></td></tr>
          </table>

          <!-- Examen Clínico -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Exámen Clínico:</th></tr>
            <tr><td class="lines tall"><t t-esc="o.clinical_exam or ''"/></td></tr>
          </table>

          <!-- Prediagnósticos -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Prediagnósticos:</th></tr>
            <tr><td class="lines"><t t-esc="o.prediagnoses or ''"/></td></tr>
          </table>

          <!-- Tratamiento -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Tratamiento:</th></tr>
            <tr><td class="lines"><t t-esc="o.treatment or ''"/></td></tr>
          </table>

          <!-- Rp -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Rp:</th></tr>
            <tr><td class="lines"><t t-esc="o.rp or ''"/></td></tr>
          </table>

          <!-- Control -->
          <table class="boxed" style="margin-top:8px;">
            <tr><th class="section">Control:</th></tr>
            <tr><td class="lines"><t t-esc="o.follow_up or ''"/></td></tr>
          </table>

          <!-- Firmas (SIN tablas, SIN recuadro externo) -->
          <div class="signrow">
            <div class="signcol">
              <div class="signbox">
                <div class="sigline"></div>
                <div class="siglabel">FIRMA PROPIETARIO</div>
              </div>
            </div>
            <div class="signcol">
              <div class="signbox">
                <div class="sigline"></div>
                <div class="siglabel">FIRMA MÉDICO VETERINARIO</div>
              </div>
            </div>
          </div>

          <div class="small muted" style="margin-top:6px;">
            Ref.: <t t-esc="o.sequence or ''"/> — Paciente: <t t-esc="o.animal_id and o.animal_id.name or ''"/>
          </div>
        </div>
      </t>
    </template>

  </data>
</odoo>

=== ./report/report_vaccination.py ===
# -*- coding: utf-8 -*-
from odoo import models
from odoo.tools import file_open
import base64


class ReportVaccination(models.AbstractModel):
    _name = 'report.vet.report_vaccination'
    _description = 'Report Vaccination (PDF)'

    def _get_report_values(self, docids, data=None):
        docs = self.env['animal.vaccination'].browse(docids)

        header_b64 = False
        # Reutilizamos el header de "visita" si existe en el módulo
        try:
            with file_open('vet/static/src/img/visita_header.png', 'rb') as f:
                header_b64 = base64.b64encode(f.read()).decode('utf-8')
        except Exception:
            header_b64 = False

        return {
            'doc_ids': docs.ids,
            'doc_model': 'animal.vaccination',
            'docs': docs,
            'vacc_header_image': header_b64,
        }


=== ./report/sterilization_report.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- ===== Paperformat SIN header reservado para este reporte (válido en Odoo 17) ===== -->
    <record id="paperformat_sterilization_noheader" model="report.paperformat">
      <field name="name">Sterilization PDF (no header)</field>
      <field name="format">A4</field>
      <field name="orientation">Portrait</field>
      <!-- Márgenes ajustados: sin header, dejamos un top pequeño -->
      <field name="margin_top">6</field>
      <field name="margin_bottom">8</field>
      <field name="margin_left">10</field>
      <field name="margin_right">10</field>
      <!-- Clave: no reservar espacio de encabezado -->
      <field name="header_line">False</field>
      <field name="header_spacing">0</field>
    </record>

    <!-- Acción de reporte PDF -->
    <record id="action_report_sterilization" model="ir.actions.report">
      <field name="name">Ficha de Esterilización</field>
      <field name="model">animal.sterilization</field>
      <field name="report_type">qweb-pdf</field>
      <field name="report_name">vet.report_sterilization</field>
      <field name="report_file">vet.report_sterilization</field>
      <!-- Usamos el paperformat sin header -->
      <field name="paperformat_id" ref="vet.paperformat_sterilization_noheader"/>
      <!-- Nombre dinámico del archivo -->
      <field name="print_report_name">
        (object.patient_name or 'Esterilizacion') + ' - Ficha.pdf'
      </field>
    </record>

    <!-- Contenedor por registro -->
    <template id="report_sterilization">
      <t t-call="web.html_container">
        <t t-foreach="docs" t-as="doc">
          <t t-call="vet.report_sterilization_document"/>
          <div class="pagebreak"/>
        </t>
      </t>
    </template>

    <!-- Documento (volvemos a usar web.external_layout para asegurar <meta charset="utf-8">) -->
    <template id="report_sterilization_document">
      <t t-set="o" t-value="doc"/>
      <t t-call="web.external_layout">
        <div class="oe_structure"/>
        <style type="text/css">
          /* Fuente con buen soporte de tildes y ✓ */
          .stz { font-family: "DejaVu Sans", sans-serif; }

          .stz * { font-size: 11px; }
          .stz .title { font-size: 18px; font-weight: 700; }
          .stz .subtitle { font-size: 12px; }
          .stz table { width: 100%; border-collapse: collapse; }
          .stz th, .stz td { border: 1px solid #555; padding: 4px 6px; vertical-align: middle; }
          .stz .noborder td, .stz .noborder th { border: 0; }
          /* Permite marcar celdas individuales sin borde */
          .stz td.noborder, .stz th.noborder { border: 0 !important; }
          .stz .section { background: #eee; font-weight: 700; }
          .stz .checkbox { display:inline-block; border:1px solid #555; width:12px; height:12px; margin-right:4px; text-align:center; line-height:12px; }
          .stz .center { text-align: center; }
          .stz .right { text-align: right; }
          .stz .small { font-size: 10px; }
          .stz .microchip-box { border:1px solid #555; height:40px; }
          .stz .pagebreak { page-break-after: always; }
          .stz .sig { height:60px; }
          .stz .muted { color:#666; }
          .stz .line { display:inline-block; border-bottom:1px solid #555; min-width:140px; height:14px; vertical-align:bottom; }

          /* ===== Bloques de firma sin tablas (evitan cualquier recuadro) ===== */
          .stz .signrow { display: table; width: 100%; margin-top: 45px; }
          .stz .signcol { display: table-cell; width: 50%; padding: 0 6px; vertical-align: top; }

          /* Aumentamos el área en blanco para firmar (más espacio arriba de la línea) */
          .stz .signbox { text-align: center; padding-top: 140px; min-height: 180px; }

          /* Línea de firma visible justo encima del texto */
          .stz .sigline { border-top: 1px solid #555; margin: 0 12% 8px; height: 0; }
          .stz .siglabel { font-size: 15px; }

          /* Anular bordes SOLO en los contenedores, no en la línea */
          .stz .signrow,
          .stz .signcol,
          .stz .signbox,
          .stz .siglabel { border: 0 !important; outline: none !important; }

          /* ===== Ocultar el pie y el header estándar SOLO en este reporte ===== */
          .footer,
          .o_footer,
          .o_report_layout_standard .footer,
          .o_report_layout_boxed .footer,
          .o_report_layout_bold .footer,
          .header,
          .o_header,
          .o_report_layout_standard .header,
          .o_report_layout_boxed .header,
          .o_report_layout_bold .header {
            display: none !important;
            visibility: hidden !important;
            height: 0 !important;
            margin: 0 !important;
            padding: 0 !important;
            border: 0 !important;
          }
          .footer * { border: 0 !important; }

          /* ===== Imagen de cabecera (título) ===== */
          .stz .title-image {
            max-height: 70px;     /* ajusta si quieres más alto/bajo */
            width: auto;
            display: block;
          }
        </style>

        <div class="stz">

          <!-- Cabecera: imagen (izquierda) + microchip (derecha) -->
          <table class="noborder">
            <tr>
              <td class="noborder" style="width:65%; vertical-align:middle;">
                <!-- Se inyecta via parser como base64 para evitar problemas de rutas en wkhtmltopdf -->
                <img class="title-image"
                     t-if="stz_title_image"
                     t-att-src="'data:image/png;base64,%s' % (stz_title_image)"
                     alt="Esterilización - Ficha de Identificación, Consentimiento y Declaración simple"/>
              </td>
              <td class="noborder" style="width:35%">
                <table>
                  <tr>
                    <th class="center">Etiqueta del Microchip</th>
                  </tr>
                  <tr>
                    <td class="microchip-box center small">
                      <t t-esc="o.animal_id and (o.animal_id.microchip_number or '')"/>
                    </td>
                  </tr>
                </table>
              </td>
            </tr>
          </table>

          <!-- Datos responsable -->
          <table>
            <tr><th colspan="8" class="section">Datos responsable</th></tr>
            <tr>
              <td style="width:12%">Fecha:</td>
              <td style="width:13%"><span t-field="o.date"/></td>
              <td style="width:8%">RUT:</td>
              <td style="width:17%"><span t-esc="o.resp_rut or ''"/></td>
              <td style="width:16%">Fecha de nacimiento:</td>
              <td style="width:14%"><span t-field="o.resp_birthdate"/></td>
              <td style="width:8%">Teléfono 1:</td>
              <td style="width:12%"><span t-esc="o.resp_phone1 or ''"/></td>
            </tr>
            <tr>
              <td>Nombre:</td>
              <td colspan="3"><span t-esc="o.resp_name or ''"/></td>
              <td>Teléfono 2:</td>
              <td><span t-esc="o.resp_phone2 or ''"/></td>
              <td>Mail:</td>
              <td><span t-esc="o.resp_email or ''"/></td>
            </tr>
            <tr>
              <td>Dirección:</td>
              <td colspan="5"><span t-esc="o.resp_address or ''"/></td>
              <td>Comuna:</td>
              <td><span t-esc="o.resp_commune or ''"/></td>
            </tr>
            <tr>
              <td>Región:</td>
              <td colspan="3"><span t-esc="o.resp_region or ''"/></td>
              <td class="center" colspan="2">¿Es dueño/a de la mascota?</td>
              <td colspan="2">
                <span class="checkbox" t-esc=" '✔' if o.resp_is_owner else '' "/> Sí
                &#160;&#160;&#160;
                <span class="checkbox" t-esc=" '✔' if not o.resp_is_owner else '' "/> No
              </td>
            </tr>
          </table>

          <!-- Datos Paciente -->
          <table>
            <tr><th colspan="12" class="section">Datos Paciente</th></tr>
            <tr>
              <td style="width:10%">Nombre</td>
              <td style="width:16%"><span t-esc="o.patient_name or (o.animal_id and o.animal_id.name) or ''"/></td>
              <td style="width:10%">Especie</td>
              <!-- Antes: dict(o._fields['specie'].selection).get(o.specie) -->
              <td style="width:12%"><span t-esc="o.specie_id and o.specie_id.name or ''"/></td>
              <td style="width:8%">Sexo</td>
              <td style="width:10%"><span t-esc="dict(o._fields['sex'].selection).get(o.sex) if o.sex else ''"/></td>
              <td style="width:8%">Raza</td>
              <!-- Antes: o.breed_text -->
              <td style="width:10%"><span t-esc="o.breed_id and o.breed_id.name or ''"/></td>
              <td style="width:8%">Color</td>
              <td style="width:8%"><span t-esc="o.color or ''"/></td>
              <td style="width:4%">Patrón</td>
              <td style="width:6%"><span t-esc="o.pattern or ''"/></td>
            </tr>
            <tr>
              <td>Fecha Nacimiento</td>
              <td><span t-field="o.patient_birthdate"/></td>
              <td>Peso (Kg)</td>
              <td><span t-esc="o.weight or ''"/></td>
              <td>Tipo Tenencia</td>
              <td><span t-esc="dict(o._fields['tenancy_type'].selection).get(o.tenancy_type) if o.tenancy_type else ''"/></td>
              <td>Comuna Obtención</td>
              <td><span t-esc="o.commune_obtention or ''"/></td>
              <td>N° animales casa</td>
              <td colspan="3"><span t-esc="o.animals_at_home or ''"/></td>
            </tr>
            <tr>
              <td>Obtención</td>
              <td colspan="3"><span t-esc="dict(o._fields['obtention'].selection).get(o.obtention) if o.obtention else ''"/></td>
              <td>Razón tenencia</td>
              <td colspan="5"><span t-esc="dict(o._fields['tenure_reason'].selection).get(o.tenure_reason) if o.tenure_reason else ''"/></td>
              <td colspan="2"><span t-esc="o.tenure_reason_other if (o.tenure_reason == 'otro') else ''"/></td>
            </tr>
            <tr>
              <td>¿Mascota ya esterilizada?</td>
              <td colspan="2">
                <span class="checkbox" t-esc=" '✔' if o.already_sterilized else '' "/> Sí
                &#160;&#160;&#160;
                <span class="checkbox" t-esc=" '✔' if (o.already_sterilized is False) else '' "/> No
              </td>
              <td class="center">¿Ha asistido antes al Médico Veterinario?</td>
              <td colspan="3">
                <span class="checkbox" t-esc=" '✔' if o.visited_vet_before == 'si' else '' "/> Sí
                &#160;&#160;&#160;
                <span class="checkbox" t-esc=" '✔' if o.visited_vet_before == 'no' else '' "/> No
                &#160;&#160;&#160;
                <span class="checkbox" t-esc=" '✔' if o.visited_vet_before == 'ns' else '' "/> N/S
              </td>
              <td class="center">¿Microchip implantado hoy?</td>
              <td colspan="4">
                <span class="checkbox" t-esc=" '✔' if o.microchip_today else '' "/> Sí
                &#160;&#160;&#160;
                <span class="checkbox" t-esc=" '✔' if (o.microchip_today is False) else '' "/> No
              </td>
            </tr>
          </table>

          <!-- Procedimiento -->
          <table>
            <tr><th colspan="8" class="section">Procedimiento</th></tr>
            <tr>
              <td style="width:14%">Procedimiento</td>
              <td style="width:20%"><span t-esc="dict(o._fields['procedure_type'].selection).get(o.procedure_type) if o.procedure_type else ''"/></td>
              <td style="width:18%">Abordaje</td>
              <td style="width:16%">
                <span t-esc="dict(o._fields['ovario_approach'].selection).get(o.ovario_approach) if (o.procedure_type == 'ovariohisterectomia' and o.ovario_approach) else ''"/>
              </td>
              <td style="width:16%">Técnica</td>
              <td colspan="3">
                <span t-esc="dict(o._fields['orchiectomy_type'].selection).get(o.orchiectomy_type) if (o.procedure_type == 'orquiectomia' and o.orchiectomy_type) else ''"/>
              </td>
            </tr>

            <!-- Fila de datos de médico y RUT (sin el bloque de firma dentro de la tabla con bordes) -->
            <tr>
              <td>Nombre M.veterinario/a</td>
              <td><span t-esc="o.vet_name or ''"/></td>
              <td>RUT</td>
              <td><span t-esc="o.vet_rut or ''"/></td>
              <!-- Reservamos el espacio restante sin bordes -->
              <td class="noborder" colspan="4"></td>
            </tr>
          </table>

          <!-- Bloque de firma y timbre SIN BORDES -->
          <table class="noborder" style="margin-top:4px;">
            <tr class="noborder">
              <td class="noborder" style="width:20%;">Firma y timbre</td>
              <td class="noborder center" style="width:80%; height:60px;">
                <img t-if="o.signature" t-att-src="image_data_uri(o.signature)" style="max-height:60px;"/>
              </td>
            </tr>
          </table>

          <!-- Resultado procedimientos -->
          <table>
            <tr><th colspan="8" class="section">Resultado procedimientos</th></tr>
            <tr>
              <td style="width:16%">Esterilización - Estado</td>
              <td style="width:84%" colspan="7">
                <span class="checkbox" t-esc=" '✔' if o.status == 'exito' else '' "/> finalizado con éxito
                &#160;&#160;&#160;
                <span class="checkbox" t-esc=" '✔' if o.status == 'suspendido' else '' "/> suspendido
                &#160;&#160;&#160;
                <span class="checkbox" t-esc=" '✔' if o.status == 'rechazado' else '' "/> rechazado
                &#160;&#160;&#160;
                <span class="checkbox" t-esc=" '✔' if o.status == 'fallecido' else '' "/> fallecido
              </td>
            </tr>
            <tr>
              <td>Causa defunción</td>
              <td colspan="3"><span t-esc="o.death_cause if (o.status == 'fallecido') else ''"/></td>
              <td>Momento de defunción</td>
              <td colspan="2">
                <span t-esc="dict(o._fields['death_moment'].selection).get(o.death_moment) if (o.status == 'fallecido' and o.death_moment) else ''"/>
              </td>
              <td>Fecha defunción</td>
              <td><span t-field="o.death_date"/></td>
            </tr>
          </table>

          <!-- Autorización -->
          <table>
            <tr><th class="section">Autorización</th></tr>
            <tr>
              <td class="small">
                Mediante el presente documento autorizo a realizar el procedimiento de Esterilización al paciente individualizado en esta ficha,
                el que es de mi propiedad o del cual me haré responsable para efectos de los cuidados.
                &#160;&#160;&#160;&#160;[ ] Sí &#160;&#160;&#160; [ ] No
              </td>
            </tr>
          </table>

          <!-- Esterilización (texto completo) -->
          <table>
            <tr><th class="section">Esterilización</th></tr>
            <tr>
              <td class="small">
                Declaro que me han explicado detalladamente el procedimiento quirúrgico al que será sometida mi mascota y manifiesto entender que se extraerán definitivamente los órganos reproductores de ésta.<br/>
                Se me ha explicado además que, por su naturaleza, este procedimiento involucra riesgos generales y complicaciones que, a pesar de todas las medidas y cuidados efectuados por el equipo médico, pueden ser inevitables y en un bajo porcentaje de los casos llegar incluso a causar la muerte de mi mascota.<br/>
                Además declaro estar en conocimiento y consentir que, como todo procedimiento quirúrgico, requiere sedación y anestesia general, lo que puede estar asociado a complicaciones propias de su ejecución.<br/>
                Entiendo que siempre existe una posibilidad de que, en beneficio del paciente, el cirujano suspenda la cirugía o que varíe la técnica escogida previamente.<br/>
                Sé que todo procedimiento tiene limitaciones donde a veces no se logran los beneficios esperados, que ante la obtención de resultados parciales y/o complicaciones se hace necesario re intervenir o realizar procedimientos complementarios, que depende de factores variables e inadvertidos, y que en tal caso deberé asumir los gastos que ello implique.<br/>
                Declaro que he entregado información veraz sobre la salud de mi mascota y si ésta ha presentado en estos últimos 10 días: vómitos, diarrea, tos, secreciones oculares y nasales, descoordinación, anorexia, traumas, convulsiones.<br/>
                Manifiesto que toda la información entregada para la confección de esta ficha es fidedigna.<br/>
                Declaro cumplir con las horas de ayuno de agua y alimento que me indicaron para mi mascota y traer los implementos solicitados. Acepto que una de sus orejas será tatuada con la finalidad de registrar que fue esterilizado.<br/>
                Entiendo y acepto que tener a un animal sin dueño no implica la propiedad de él, sin embargo, sí implica la responsabilidad de los cuidados e indicaciones hasta su recuperación.<br/>
                Declaro no me encuentro afecto a la Inhabilidad absoluta y perpetua para la Tenencia de Animales, pena por simple delito contemplada en el Artículo 21 del Código Penal, para las personas que sean condenadas por el Delito de Maltrato o Crueldad Animal tipificado en el Artículo 291 Bis y Ter del Código Penal.
              </td>
            </tr>
          </table>

          <!-- Registro e Identificación -->
          <table>
            <tr><th class="section">Registro e Identificación</th></tr>
            <tr>
              <td class="small">
                Declaro entender que a mi mascota se le ha implantado un microchip, dispositivo electrónico subcutáneo que contiene un número único que será vinculado a mis datos personales. Autorizo a la municipalidad para efectuar la inscripción de mi mascota en el Registro Nacional de Mascotas o Animales de Compañía. Autorizo el despliegue de mis datos: Teléfono Fijo, Teléfono Celular y Correo Electrónico en caso de extravío de mi(s) mascota(s).
              </td>
            </tr>
          </table>

          <!-- Egreso -->
          <table>
            <tr><th class="section">Egreso</th></tr>
            <tr>
              <td class="small">
                Declaro que he recibido a mi mascota y el documento de cuidados post operatorios. Se me ha explicado y entiendo las indicaciones de los cuidados que debo realizar, asumiendo total responsabilidad durante este proceso. Entiendo los riesgos que existen para el bienestar y la recuperación del paciente si no efectúo las indicaciones que me entregaron. Me adhiero a la receta, controles y otros que me hayan señalado.<br/>
                He sido instruido en que si mi mascota presenta signos de decaimiento, falta de apetito, vómitos, diarrea, hemorragias, aumento de volumen, secreciones, fiebre, dolor, dificultad respiratoria, convulsiones u otros signos de alarma, debo llevarla inmediatamente a control.
              </td>
            </tr>
            <tr>
              <td>
                Mi mascota ha sido entregada:
                &#160; <span class="checkbox"/> viva
                &#160;&#160;&#160;
                <span class="checkbox"/> fallecida
              </td>
            </tr>
            <tr>
              <td>
                Estado:
                &#160; <span class="checkbox"/> consciente
                &#160;&#160;&#160; <span class="checkbox"/> se levanta sola
                &#160;&#160;&#160; <span class="checkbox"/> limpia
                &#160;&#160;&#160; <span class="checkbox"/> identidad corroborada con microchip
                &#160;&#160;&#160; <span class="checkbox"/> herida sin sangre
              </td>
            </tr>
          </table>

          <!-- Observaciones -->
          <table>
            <tr><th class="section">Observaciones / Notas</th></tr>
            <tr>
              <td style="height:120px;">
                <span t-esc="o.notes or ''"/>
              </td>
            </tr>
          </table>

          <!-- Firmas (sin tablas, sin recuadros) -->
          <div class="signrow">
            <div class="signcol">
              <div class="signbox">
                <div class="sigline"></div>
                <div class="siglabel">Firma Responsable</div>
              </div>
            </div>
            <div class="signcol">
              <div class="signbox">
                <div class="sigline"></div>
                <div class="siglabel">Timbre / Firma Clínica</div>
              </div>
            </div>
          </div>

        </div>
      </t>
    </template>

  </data>
</odoo>

=== ./report/exam_order_report.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- ===== Paperformat SIN header reservado (Odoo 17) ===== -->
    <record id="paperformat_exam_order_noheader" model="report.paperformat">
      <field name="name">Exam Order PDF (no header)</field>
      <field name="format">A4</field>
      <field name="orientation">Portrait</field>
      <field name="margin_top">6</field>
      <field name="margin_bottom">8</field>
      <field name="margin_left">10</field>
      <field name="margin_right">10</field>
      <field name="header_line">False</field>
      <field name="header_spacing">0</field>
    </record>

    <!-- ===== Acción de reporte PDF ===== -->
    <record id="action_report_exam_order" model="ir.actions.report">
      <field name="name">Orden de Examen</field>
      <field name="model">animal.exam.order</field>
      <field name="report_type">qweb-pdf</field>
      <field name="report_name">vet.report_exam_order</field>
      <field name="report_file">vet.report_exam_order</field>
      <field name="paperformat_id" ref="vet.paperformat_exam_order_noheader"/>
      <!-- Cambiamos el nombre del archivo según el estado:
           - Si está 'done' => "... - Resultado.pdf"
           - En cualquier otro estado => "... - Orden.pdf" -->
      <field name="print_report_name">
        (object.sequence or 'Orden de Examen') + (' - Resultado.pdf' if object.state == 'done' else ' - Orden.pdf')
      </field>
    </record>

    <!-- ===== Contenedor por registro ===== -->
    <template id="report_exam_order">
      <t t-call="web.html_container">
        <t t-foreach="docs" t-as="doc">
          <t t-call="vet.report_exam_order_document"/>
          <div class="pagebreak"/>
        </t>
      </t>
    </template>

    <!-- ===== Documento ===== -->
    <template id="report_exam_order_document">
      <t t-set="o" t-value="doc"/>
      <t t-call="web.external_layout">
        <style type="text/css">
          .exo * { font-size: 12px; font-family: "DejaVu Sans", sans-serif; }
          .exo .title { font-size: 18px; font-weight: 700; text-align:center; }
          .exo .subtitle { font-size: 12px; text-align:center; }
          .exo table { width: 100%; border-collapse: collapse; }
          .exo th, .exo td { border: 0; padding: 4px 6px; vertical-align: top; }
          .exo .section { font-weight: 700; text-align:center; border: 1px solid #000; background: #f3f3f3; }
          .exo .boxed { border: 1px solid #000; }
          .exo .rowline td { border-bottom: 1px solid #000; }
          .exo .label { width: 22%; white-space: nowrap; }
          .exo .val { width: 28%; border-bottom: 1px solid #000; }
          .exo .val2 { border-bottom: 1px solid #000; }
          .exo .muted { color:#666; }
          .exo .header-strip { margin-bottom: 4px; }
          .exo .header-image { max-width: 100%; height: auto; display: block; margin: 0 auto; }
          .exo .header-date { text-align: right; margin: 2px 0 6px; }
          .exo .small { font-size: 11px; }

          /* ===== Ocultar pie y header estándar SOLO en este reporte ===== */
          .footer,
          .o_footer,
          .o_report_layout_standard .footer,
          .o_report_layout_boxed .footer,
          .o_report_layout_bold .footer,
          .header,
          .o_header,
          .o_report_layout_standard .header,
          .o_report_layout_boxed .header,
          .o_report_layout_bold .header {
            display: none !important;
            visibility: hidden !important;
            height: 0 !important;
            margin: 0 !important;
            padding: 0 !important;
            border: 0 !important;
          }
          .footer * { border: 0 !important; }
        </style>

        <div class="exo">

          <!-- Cabecera con imagen + fecha -->
          <div class="header-strip">
            <img class="header-image"
                 t-if="exam_header_image"
                 t-att-src="'data:image/png;base64,%s' % (exam_header_image)"
                 alt="Encabezado"/>
          </div>
          <div class="header-date">
            Fecha:
            <span class="val2">
              <span t-field="o.date" t-options='{"widget": "date"}'/>
            </span>
          </div>

          <!-- TÍTULO DINÁMICO SEGÚN ESTADO -->
          <div class="title" style="margin:6px 0;">
            <t t-esc="'RESULTADO DE EXAMEN' if o.state == 'done' else 'ORDEN DE EXAMEN'"/>
          </div>

          <!-- Información del propietario -->
          <table class="boxed" style="margin-top:6px;">
            <tr>
              <th class="section" colspan="4">Información del propietario</th>
            </tr>
            <tr>
              <td class="label">Nombre completo :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.name or '')"/>
              </td>
              <td class="label">RUT :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.vat or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Teléfono :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.phone or o.owner_id.mobile or '')"/>
              </td>
              <td class="label">Correo :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.email or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Dirección :</td>
              <td class="val" colspan="3">
                <t t-esc="o.owner_id and (o.owner_id.street or '')"/>
              </td>
            </tr>
          </table>

          <!-- Información del paciente -->
          <table class="boxed" style="margin-top:8px;">
            <tr>
              <th class="section" colspan="6">Información del paciente</th>
            </tr>
            <tr>
              <td class="label">Nombre:</td>
              <td class="val">
                <t t-esc="o.animal_id and (o.animal_id.name or '')"/>
              </td>
              <td class="label">Especie (C/F):</td>
              <td class="val">
                <t t-esc="o.specie and o.specie.name or ''"/>
              </td>
              <td class="label">N° de Microchip:</td>
              <td class="val">
                <t t-esc="o.animal_id and (o.animal_id.microchip_number or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Sexo:</td>
              <td class="val">
                <t t-esc="({'male':'Masculino','female':'Femenino'}).get(o.animal_id.sex) if o.animal_id else ''"/>
              </td>
              <td class="label">Raza:</td>
              <td class="val">
                <t t-esc="o.breed and o.breed.name or (o.animal_id and (o.animal_id.breed and o.animal_id.breed.name) or '')"/>
              </td>
              <td class="label">Color:</td>
              <td class="val">
                <t t-if="o.animal_id and o.animal_id.tags">
                  <t t-foreach="o.animal_id.tags" t-as="c">
                    <t t-esc="c.name"/><t t-if="c != o.animal_id.tags[-1]">, </t>
                  </t>
                </t>
              </td>
            </tr>
          </table>

          <!-- Detalle de la orden -->
          <table class="boxed" style="margin-top:8px;">
            <tr>
              <th class="section" colspan="4">Detalle de la orden</th>
            </tr>
            <tr>
              <td class="label">Referencia:</td>
              <td class="val">
                <t t-esc="o.sequence or ''"/>
              </td>
              <td class="label">Profesional (Dr/Dra):</td>
              <td class="val">
                <t t-esc="o.doctor or ''"/>
              </td>
            </tr>
            <tr>
              <td class="label">Tipo de examen:</td>
              <td class="val" colspan="3">
                <t t-esc="dict(o._fields['exam_type'].selection).get(o.exam_type) if o.exam_type else ''"/>
                <t t-if="o.exam_type == 'otro' and o.exam_type_other">
                  — <t t-esc="o.exam_type_other"/>
                </t>
              </td>
            </tr>
            <tr>
              <td class="label">Prioridad:</td>
              <td class="val">
                <t t-esc="dict(o._fields['priority'].selection).get(o.priority) if o.priority else ''"/>
              </td>
              <td class="label"></td>
              <td class="val"></td>
            </tr>
            <tr>
              <td class="label" colspan="4">Notas / Indicaciones:</td>
            </tr>
            <tr>
              <td class="val2" colspan="4" style="height: 84px;">
                <t t-esc="o.notes or ''"/>
              </td>
            </tr>
            <tr>
              <td class="label" colspan="4">Resultados / Observaciones:</td>
            </tr>
            <tr>
              <td class="val2" colspan="4" style="height: 110px;">
                <t t-esc="o.results or ''"/>
              </td>
            </tr>
          </table>

          <div class="small muted" style="margin-top:6px;">
            Ref.: <t t-esc="o.sequence or ''"/> — Paciente: <t t-esc="o.animal_id and o.animal_id.name or ''"/>
          </div>
        </div>
      </t>
    </template>

  </data>
</odoo>

=== ./report/report_consent.py ===
# -*- coding: utf-8 -*-
from odoo import models
from odoo.tools import file_open
import base64


class ReportConsent(models.AbstractModel):
    _name = 'report.vet.report_consent'
    _description = 'Report Consent (PDF)'

    def _get_report_values(self, docids, data=None):
        docs = self.env['animal.consent'].browse(docids)

        header_b64 = False
        # Reutilizamos el header de "visita" si existe en el módulo
        try:
            with file_open('vet/static/src/img/visita_header.png', 'rb') as f:
                header_b64 = base64.b64encode(f.read()).decode('utf-8')
        except Exception:
            header_b64 = False

        return {
            'doc_ids': docs.ids,
            'doc_model': 'animal.consent',
            'docs': docs,
            'consent_header_image': header_b64,
        }

=== ./report/report_visit.py ===
# -*- coding: utf-8 -*-
from odoo import models
from odoo.tools import file_open
import base64

class ReportVisit(models.AbstractModel):
    _name = 'report.vet.report_visit'
    _description = 'Report Visit (PDF)'

    def _get_report_values(self, docids, data=None):
        docs = self.env['animal.visit'].browse(docids)

        header_b64 = False
        divider_b64 = False

        # Intentamos cargar ambas imágenes desde el módulo; si falla, seguimos sin romper el reporte
        try:
            with file_open('vet/static/src/img/visita_header.png', 'rb') as f:
                header_b64 = base64.b64encode(f.read()).decode('utf-8')
        except Exception:
            header_b64 = False

        try:
            with file_open('vet/static/src/img/visita_divider.png', 'rb') as f:
                divider_b64 = base64.b64encode(f.read()).decode('utf-8')
        except Exception:
            divider_b64 = False

        return {
            'doc_ids': docs.ids,
            'doc_model': 'animal.visit',
            'docs': docs,
            'visit_header_image': header_b64,
            'visit_divider_image': divider_b64,
        }


=== ./report/vaccination_report.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- ===== Paperformat SIN header reservado (Odoo 17) ===== -->
    <record id="paperformat_vaccination_noheader" model="report.paperformat">
      <field name="name">Vaccination PDF (no header)</field>
      <field name="format">A4</field>
      <field name="orientation">Portrait</field>
      <field name="margin_top">6</field>
      <field name="margin_bottom">8</field>
      <field name="margin_left">10</field>
      <field name="margin_right">10</field>
      <field name="header_line">False</field>
      <field name="header_spacing">0</field>
    </record>

    <!-- ===== Acción de reporte PDF ===== -->
    <record id="action_report_vaccination" model="ir.actions.report">
      <field name="name">Registro de Vacunación</field>
      <field name="model">animal.vaccination</field>
      <field name="report_type">qweb-pdf</field>
      <field name="report_name">vet.report_vaccination</field>
      <field name="report_file">vet.report_vaccination</field>
      <field name="paperformat_id" ref="vet.paperformat_vaccination_noheader"/>
      <field name="print_report_name">
        (object.animal_id and object.animal_id.name or 'Vacunación') + ' - ' + (object.vaccine_id and object.vaccine_id.name or 'Vacuna') + ' - Registro.pdf'
      </field>
    </record>

    <!-- ===== Contenedor por registro ===== -->
    <template id="report_vaccination">
      <t t-call="web.html_container">
        <t t-foreach="docs" t-as="doc">
          <t t-call="vet.report_vaccination_document"/>
          <div class="pagebreak"/>
        </t>
      </t>
    </template>

    <!-- ===== Documento ===== -->
    <template id="report_vaccination_document">
      <t t-set="o" t-value="doc"/>
      <t t-call="web.external_layout">
        <style type="text/css">
          .vac * { font-size: 12px; font-family: "DejaVu Sans", sans-serif; }
          .vac .title { font-size: 18px; font-weight: 700; text-align:center; }
          .vac .subtitle { font-size: 12px; text-align:center; }
          .vac table { width: 100%; border-collapse: collapse; }
          .vac th, .vac td { border: 0; padding: 4px 6px; vertical-align: top; }
          .vac .section { font-weight: 700; text-align:center; border: 1px solid #000; background: #f3f3f3; }
          .vac .boxed { border: 1px solid #000; }
          .vac .label { width: 22%; white-space: nowrap; }
          .vac .val { width: 28%; border-bottom: 1px solid #000; }
          .vac .val2 { border-bottom: 1px solid #000; }
          .vac .muted { color:#666; }
          .vac .header-strip { margin-bottom: 4px; }
          .vac .header-image { max-width: 100%; height: auto; display: block; margin: 0 auto; }
          .vac .header-date { text-align: right; margin: 2px 0 6px; }
          .vac .small { font-size: 11px; }

          /* ===== Ocultar pie y header estándar SOLO en este reporte ===== */
          .footer,
          .o_footer,
          .o_report_layout_standard .footer,
          .o_report_layout_boxed .footer,
          .o_report_layout_bold .footer,
          .header,
          .o_header,
          .o_report_layout_standard .header,
          .o_report_layout_boxed .header,
          .o_report_layout_bold .header {
            display: none !important;
            visibility: hidden !important;
            height: 0 !important;
            margin: 0 !important;
            padding: 0 !important;
            border: 0 !important;
          }
          .footer * { border: 0 !important; }
        </style>

        <div class="vac">

          <!-- Cabecera con imagen -->
          <div class="header-strip">
            <img class="header-image"
                 t-if="vacc_header_image"
                 t-att-src="'data:image/png;base64,%s' % (vacc_header_image)"
                 alt="Encabezado"/>
          </div>

          <div class="title" style="margin:6px 0;">
            REGISTRO DE VACUNACIÓN
          </div>

          <!-- Información del propietario -->
          <table class="boxed" style="margin-top:6px;">
            <tr>
              <th class="section" colspan="4">Información del propietario</th>
            </tr>
            <tr>
              <td class="label">Nombre completo :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.name or '')"/>
              </td>
              <td class="label">RUT :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.vat or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Teléfono :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.phone or o.owner_id.mobile or '')"/>
              </td>
              <td class="label">Correo :</td>
              <td class="val">
                <t t-esc="o.owner_id and (o.owner_id.email or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Dirección :</td>
              <td class="val" colspan="3">
                <t t-esc="o.owner_id and (o.owner_id.street or '')"/>
              </td>
            </tr>
          </table>

          <!-- Información del paciente -->
          <table class="boxed" style="margin-top:8px;">
            <tr>
              <th class="section" colspan="6">Información del paciente</th>
            </tr>
            <tr>
              <td class="label">Nombre:</td>
              <td class="val">
                <t t-esc="o.animal_id and (o.animal_id.name or '')"/>
              </td>
              <td class="label">Especie (C/F):</td>
              <td class="val">
                <t t-esc="o.specie_id and o.specie_id.name or ''"/>
              </td>
              <td class="label">N° de Microchip:</td>
              <td class="val">
                <t t-esc="o.animal_id and (o.animal_id.microchip_number or '')"/>
              </td>
            </tr>
            <tr>
              <td class="label">Sexo:</td>
              <td class="val">
                <t t-esc="({'male':'Masculino','female':'Femenino'}).get(o.animal_id.sex) if o.animal_id else ''"/>
              </td>
              <td class="label">Raza:</td>
              <td class="val">
                <t t-esc="o.animal_id and o.animal_id.breed and o.animal_id.breed.name or ''"/>
              </td>
              <td class="label">Color:</td>
              <td class="val">
                <t t-if="o.animal_id and o.animal_id.tags">
                  <t t-foreach="o.animal_id.tags" t-as="c">
                    <t t-esc="c.name"/><t t-if="c != o.animal_id.tags[-1]">, </t>
                  </t>
                </t>
              </td>
            </tr>
          </table>

          <!-- Detalle de la vacunación -->
          <table class="boxed" style="margin-top:8px;">
            <tr>
              <th class="section" colspan="4">Detalle de la vacunación</th>
            </tr>
            <tr>
              <td class="label">Vacuna:</td>
              <td class="val">
                <t t-esc="o.vaccine_id and o.vaccine_id.name or ''"/>
              </td>
              <td class="label">Fecha de vacunación:</td>
              <td class="val">
                <span t-field="o.date" t-options='{"widget": "date"}'/>
              </td>
            </tr>
            <tr>
              <td class="label">Vía de administración:</td>
              <td class="val">
                <t t-esc="dict(o._fields['route'].selection).get(o.route) if o.route else ''"/>
              </td>
              <td class="label">Próxima vacunación:</td>
              <td class="val">
                <span t-field="o.next_date" t-options='{"widget": "date"}'/>
              </td>
            </tr>
            <tr>
              <td class="label">Profesional (Dr/Dra):</td>
              <td class="val" colspan="3">
                <t t-esc="o.doctor or ''"/>
              </td>
            </tr>
            <tr>
              <td class="label" colspan="4">Notas / Observaciones:</td>
            </tr>
            <tr>
              <td class="val2" colspan="4" style="height: 84px;">
                <t t-esc="o.notes or ''"/>
              </td>
            </tr>
          </table>

          <div class="small muted" style="margin-top:6px;">
            Paciente: <t t-esc="o.animal_id and o.animal_id.name or ''"/>
            — Dueño: <t t-esc="o.owner_id and o.owner_id.name or ''"/>
          </div>
        </div>
      </t>
    </template>

  </data>
</odoo>

=== ./__manifest__.py ===
# -*- coding: utf-8 -*-
{
    'name': "Veterinary management",

    'summary': "Manage the animals that visit our veterinarian",

    'description': """
Manage the animals that visit our veterinarian
    """,

    'author': "Javier Diez",
    'website': "https://javierdiez.netlify.app/",
    'license': 'AGPL-3',
    'category': 'Animales',
    'version': '1.0',

    # any module necessary for this one to work correctly
    'depends': ['base','mail'],

    # always loaded
    'data': [
        'security/ir.model.access.csv',

        # === Reportes ===
        'report/sterilization_report.xml',
        'report/visit_report.xml',
        'report/exam_order_report.xml',
        # === EXISTENTE: Reporte PDF de Vacunación ===
        'report/vaccination_report.xml',
        # === NUEVO: Reporte PDF de Consentimientos ===
        'report/consent_report.xml',

        # === Vistas base ===
        'views/animals_views.xml',
        'views/medicines_views.xml',
        'views/allergies_views.xml',
        'views/surgeries_views.xml',
        'views/vaccines_views.xml',
        'views/visits_views.xml',
        'views/species_views.xml',
        'views/breeds_views.xml',
        'views/tags_views.xml',
        'views/animal_partner_views.xml',

        # Vistas de Seguros
        'views/insurances_views.xml',

        # Vistas de Esterilizaciones
        'views/sterilizations_views.xml',

        # Vistas de Órdenes de Exámenes
        'views/exam_orders_views.xml',

        # === EXISTENTE: Vistas de REGISTROS de Vacunación ===
        'views/vaccinations_views.xml',

        # === EXISTENTE: Catálogo y REGISTROS de Desparasitación ===
        'views/dewormers_views.xml',
        'views/dewormings_views.xml',

        # === NUEVO: Consentimientos ===
        'views/consents_views.xml',

        # === NUEVO: Sala de Espera ===
        'views/waiting_room_sequence.xml',
        'views/waiting_room_views.xml',

        # Menús
        'views/animals_menus.xml',

        # Secuencias/otros
        'views/visit_sequence.xml',
        'views/animals_identification.xml',
        'views/exam_order_sequence.xml',
        # === NUEVO: Secuencia de Consentimientos ===
        'views/consent_sequence.xml',
    ],

    # only loaded in demonstration mode
    'demo': [
        'demo/demo.xml',
    ],
    "images": [
        "static/images/banner.png",
        "static/description/icon.png",
        "static/src/img/visita_header.png",
        "static/src/img/visita_divider.png",
        "static/src/img/sterilizacion_header.png"
    ],
    'installable': True,
    'application': True,
    'auto_install': False,
}


=== ./demo/demo.xml ===
<odoo>
    <data>
<!--
          <record id="object0" model="vet.vet">
            <field name="name">Object 0</field>
            <field name="value">0</field>
          </record>

          <record id="object1" model="vet.vet">
            <field name="name">Object 1</field>
            <field name="value">10</field>
          </record>

          <record id="object2" model="vet.vet">
            <field name="name">Object 2</field>
            <field name="value">20</field>
          </record>

          <record id="object3" model="vet.vet">
            <field name="name">Object 3</field>
            <field name="value">30</field>
          </record>

          <record id="object4" model="vet.vet">
            <field name="name">Object 4</field>
            <field name="value">40</field>
          </record>
-->
    </data>
</odoo>


=== ./security/ir.model.access.csv ===
id,name,model_id:id,group_id:id,perm_read,perm_write,perm_create,perm_unlink
access_animal,animal,model_animal,base.group_user,1,1,1,1
access_animal_allergy,animal.allergy,model_animal_allergy,base.group_user,1,1,1,1
access_animal_disease,animal.disease,model_animal_disease,base.group_user,1,1,1,1
access_animal_insurance,animal.insurance,model_animal_insurance,base.group_user,1,1,1,1
access_animal_medicine,animal.medicine,model_animal_medicine,base.group_user,1,1,1,1
access_animal_specie,animal.specie,model_animal_specie,base.group_user,1,1,1,1
access_animal_tag,animal.tag,model_animal_tag,base.group_user,1,1,1,1
access_animal_surgery,animal.surgery,model_animal_surgery,base.group_user,1,1,1,1
access_animal_vaccine,animal.vaccine,model_animal_vaccine,base.group_user,1,1,1,1
access_animal_visit,animal.visit,model_animal_visit,base.group_user,1,1,1,1
access_animal_breed,animal.breed,model_animal_breed,base.group_user,1,1,1,1
access_animal_sterilization,animal.sterilization,model_animal_sterilization,base.group_user,1,1,1,1
access_animal_exam_order,animal.exam.order,model_animal_exam_order,base.group_user,1,1,1,1
access_animal_vaccination,animal.vaccination,model_animal_vaccination,base.group_user,1,1,1,1
access_animal_dewormer,animal.dewormer,model_animal_dewormer,base.group_user,1,1,1,1
access_animal_deworming,animal.deworming,model_animal_deworming,base.group_user,1,1,1,1
access_animal_consent,animal.consent,model_animal_consent,base.group_user,1,1,1,1
access_vet_waiting_ticket,vet.waiting.ticket,model_vet_waiting_ticket,base.group_user,1,1,1,1

=== ./controllers/__init__.py ===
# -*- coding: utf-8 -*-

from . import controllers


=== ./controllers/controllers.py ===
# -*- coding: utf-8 -*-
# from odoo import http


# class Vet(http.Controller):
#     @http.route('/vet/vet', auth='public')
#     def index(self, **kw):
#         return "Hello, world"

#     @http.route('/vet/vet/objects', auth='public')
#     def list(self, **kw):
#         return http.request.render('vet.listing', {
#             'root': '/vet/vet',
#             'objects': http.request.env['vet.vet'].search([]),
#         })

#     @http.route('/vet/vet/objects/<model("vet.vet"):obj>', auth='public')
#     def object(self, obj, **kw):
#         return http.request.render('vet.object', {
#             'object': obj
#         })



=== ./views/species_views.xml ===
<odoo>
    <data>

        <record id="specie_action" model="ir.actions.act_window">
            <field name="name">Especies</field>
            <field name="res_model">animal.specie</field>
            <field name="view_mode">tree,form</field>
        </record>
    </data>
</odoo>


=== ./views/breeds_views.xml ===
<odoo>
    <data>

        <record id="breed_tree_view" model="ir.ui.view">
            <field name="name">animal.breed.tree.view</field>
            <field name="model">animal.breed</field>
            <field name="arch" type="xml">
                <tree>
                    <field name="name"/>
                    <field name="specie"/>
                </tree>
            </field>
        </record>

        <record id="breed_action" model="ir.actions.act_window">
            <field name="name">Razas</field>
            <field name="res_model">animal.breed</field>
            <field name="view_mode">tree,form,kanban</field>
        </record>
    </data>
</odoo>


=== ./views/tags_views.xml ===
<odoo>
    <data>

        <record id="tag_action" model="ir.actions.act_window">
            <field name="name">Etiquetas</field>
            <field name="res_model">animal.tag</field>
            <field name="view_mode">tree,form</field>
        </record>
    </data>
</odoo>


=== ./views/animals_views.xml ===
<odoo>
  <data>

    <record id="vet_search_view" model="ir.ui.view">
      <field name="name">animal.search.view</field>
      <field name="model">animal</field>
      <field name="arch" type="xml">
        <search>
          <field name="name" />
          <field name="owner" />
          <field name="breed" />
          <field name="species" />
          <field name="identification" />
          <field name="microchip_number" string="N° de microchip"/>
          <field name="age" string="Edad"/>
          <field name="reproductive_status" string="Esterilizado/Entero"/>
          <field name="tags" string="Color"/>
          <field name="internal_notes" />
          <group>
            <filter name="visited" string="Visited" domain="[('visit_ids', '>' , '0')]" />
            <filter name="surgeries" string="With surgeries" domain="[('surgeries', '>' , '0')]" />
            <filter name="archived" string="Archived"
              domain="[('active', '!=' , 'true')]" />
          </group>
          <group expand="0" string="Animal info">
            <filter name="owner" string="Dueño" domain="[('owner', '=' , 'self')]"
              context="{'group_by':'owner'}" />
            <filter name="breed" string="Raza" domain="[('breed','=','self')]"
              context="{'group_by':'breed'}" />
            <filter name="species" string="Especie" domain="[('species', '=' , 'self')]"
              context="{'group_by':'species'}" />
            <filter name="size" string="Tamaño" domain="[('size', '=' , 'self')]"
              context="{'group_by':'size'}" />
            <filter name="sex" string="Sexo" domain="[('sex', '=' , 'self')]"
              context="{'group_by':'sex'}" />
          </group>
        </search>
      </field>
    </record>

    <record id="vet_tree_view" model="ir.ui.view">
      <field name="model">animal</field>
      <field name="name">animal.tree.view</field>
      <field name="arch" type="xml">
        <tree>
          <field name="identification" />
          <field name="microchip_number" string="N° de microchip"/>
          <field name="name" />
          <field name="owner" />
          <field name="breed" />
          <field name="species" />
          <field name="sex" />
          <field name="age" string="Edad"/>
          <field name="reproductive_status" string="Esterilizado/Entero"/>
        </tree>
      </field>
    </record>

    <record id="vet_form_view" model="ir.ui.view">
      <field name="model">animal</field>
      <field name="name">animal.form.view</field>
      <field name="arch" type="xml">
        <form>
          <header>
            <button name="action_create_quote" type="object" string="Crear Presupuesto"
              class="btn-primary"
            />
          </header>
          <sheet>
            <div class="oe_button_box" name="button_box">
              <button name="action_view_quotes" type="object" class="oe_stat_button"
                icon="fa-dollar">
                <field name="quote_count" widget="statinfo" string="Quotes" />
              </button>
              <button name="action_view_invoices" type="object" class="oe_stat_button"
                icon="fa-money">
                <field name="invoice_count" widget="statinfo" string="Invoices" />
              </button>
              <button name="action_view_visits" type="object" class="oe_stat_button"
                icon="fa-building">
                <field name="visit_count" widget="statinfo" string="Visitas" />
              </button>
            </div>
            <div class="d-flex justify-content-between">
              <div>
                <label for="name" string="Nombre" />
                <div>
                  <field name="name" class="fs-1 mb-4" />
                </div>
              </div>
              <field name="photo" widget="image" class="oe_avatar" />
            </div>

            <!-- ======= BLOQUE CON CAMPOS BÁSICOS ======= -->
            <group>
              <group>
                <field name="identification" />
              </group>
              <group>
                <field name="microchip_number" string="N° de microchip"/>
              </group>
              <group>
                <field name="owner" />
              </group>

              <!-- Especie: Many2one a animal.specie, solo seleccionar registros existentes -->
              <group>
                <field name="species"
                       string="Especie"
                       options="{'no_create': True, 'no_create_edit': True, 'no_open': True}"/>
              </group>

              <!-- Raza: Many2one a animal.breed, filtrado por la especie seleccionada -->
              <group>
                <field name="breed"
                       string="Raza"
                       domain="[('specie', '=', species)]"
                       options="{'no_create': True, 'no_create_edit': True, 'no_open': True}"/>
              </group>

              <!-- NUEVOS INPUTS AL LADO DE "Raza" -->
              <group>
                <field name="birthdate" string="Fecha de nacimiento"/>
              </group>
              <group>
                <field name="character" string="Caracter"/>
              </group>
              <group>
                <field name="habitat" string="Habitat"/>
              </group>
              <group>
                <field name="treating_doctor" string="Medico tratante"/>
              </group>
              <group>
                <field name="hair_type" string="Tipo de pelo"/>
              </group>
              <group>
                <field name="diet" string="Dieta"/>
              </group>
            </group>

            <notebook>
              <page string="Visitas">
                <field name="visit_ids">
                  <tree>
                    <field name="sequence" />
                    <field name="date" />
                    <field name="reason" />
                    <field name="suggested_treatment" />
                    <field name="observations" />
                  </tree>

                  <form>
                    <group>
                      <field name="date" />
                      <field name="reason" />
                      <field name="suggested_treatment" />
                      <field name="observations" />
                    </group>
                  </form>
                </field>
              </page>

              <page string="Medicamentos">
                <field name="medicines" />
              </page>

              <!-- ======== VACUNAS (MODIFICADO) ======== -->
              <page string="Vacunas">
                <!--
                  Reemplazamos el campo Many2many 'vaccines' por un One2many
                  'vaccination_ids', donde se registran los detalles:
                  fecha, vía, doctor y próxima vacunación.
                -->
                <field name="vaccination_ids" context="{'default_animal_id': active_id}">
                  <tree editable="bottom">
                    <field name="vaccine_id"/>
                    <field name="date"/>
                    <field name="route"/>
                    <field name="doctor" string="Dr/Dra"/>
                    <field name="next_date"/>
                    <field name="notes"/>
                  </tree>
                  <form>
                    <group string="Vacunación">
                      <group>
                        <field name="vaccine_id"/>
                        <field name="date"/>
                      </group>
                      <group>
                        <field name="route"/>
                        <field name="doctor" string="Dr/Dra" placeholder="Nombre del profesional"/>
                      </group>
                      <group>
                        <field name="next_date"/>
                        <field name="owner_id" readonly="1"/>
                      </group>
                      <field name="notes" placeholder="Observaciones adicionales..."/>
                    </group>
                  </form>
                </field>

                <!-- Opcional (solo lectura): listado de vacunas aplicadas (únicas) -->
                <group string="Resumen de vacunas aplicadas (solo lectura)">
                  <field name="vaccines" widget="many2many_tags" options="{'no_create': True, 'no_create_edit': True, 'no_open': True}" readonly="1"/>
                </group>
              </page>

              <!-- ======== DESPARASITACIONES (NUEVA PESTAÑA) ======== -->
              <page string="Desparasitaciones">
                <field name="deworming_ids" context="{'default_animal_id': active_id}">
                  <tree editable="bottom">
                    <field name="dewormer_id" string="Desparasitante"/>
                    <field name="date" string="Fecha"/>
                    <field name="route" string="Vía"/>
                    <field name="doctor" string="Dr/Dra"/>
                    <field name="next_date" string="Próxima desparasitación"/>
                    <field name="notes" string="Notas"/>
                  </tree>
                  <form>
                    <group string="Desparasitación">
                      <group>
                        <field name="dewormer_id" string="Desparasitante"/>
                        <field name="date" string="Fecha"/>
                      </group>
                      <group>
                        <field name="route" string="Vía de administración"/>
                        <field name="doctor" string="Dr/Dra" placeholder="Nombre del profesional"/>
                      </group>
                      <group>
                        <field name="next_date" string="Próxima desparasitación"/>
                        <field name="owner_id" readonly="1"/>
                      </group>
                      <field name="notes" placeholder="Observaciones adicionales..."/>
                    </group>
                  </form>
                </field>

                <group string="Resumen de desparasitaciones (solo lectura)">
                  <field name="dewormers" widget="many2many_tags" options="{'no_create': True, 'no_create_edit': True, 'no_open': True}" readonly="1"/>
                </group>
              </page>

              <page string="Alergias">
                <field name="allergies" />
              </page>

              <page string="Cirugías">
                <field name="surgeries" />
              </page>

              <page string="Otras informaciones">
                <group>
                  <group>
                    <field name="sex" />
                  </group>
                  <group>
                    <field name="size" />
                  </group>
                  <div class="d-flex">
                    <group>
                      <field name="weight" string="Peso" />
                    </group>
                    <span>Kg.</span>
                  </div>
                  <group>
                    <field name="birthdate" />
                  </group>
                  <group>
                    <field name="age" string="Edad"/>
                  </group>
                  <group>
                    <field name="reproductive_status" string="Esterilizado/Entero"/>
                  </group>
                </group>
                <group>
                  <!-- Eliminado el campo Altura y su unidad -->
                  <group>
                    <field name="tags" string="Color" widget="many2many_tags" options="{'color_field': 'color'}" />
                  </group>
                  <group>
                    <field name="active" />
                  </group>
                </group>
                <div>
                  <label for="internal_notes" string="Notas" />
                  <div>
                    <field name="internal_notes" />
                  </div>
                </div>
              </page>
            </notebook>
          </sheet>
          <div class="oe_chatter">
            <field widget="mail_thread" name="message_ids" />
            <field widget="mail_activity" name="activity_ids" />
          </div>
        </form>
      </field>
    </record>

    <record id="vet_kanban_view" model="ir.ui.view">
      <field name="name">animal.kanban.view</field>
      <field name="model">animal</field>
      <field name="arch" type="xml">
        <kanban class="o_kanban_mobile" sample="1">
          <templates>
            <t t-name="kanban-box">
              <div t-attf-class="oe_kanban_global_click">
                <div class="row">
                  <div class="col-12">
                    <strong>
                      <div>
                        <field name="name" /> (<field name="species" />) </div>
                    </strong>
                    <div> Dueño: <field name="owner" /></div>
                  </div>
                </div>
                <div>
                  <hr class="my-2" />
                    <strong>ID</strong>: <field name="identification" />
                </div>
                <div class="d-flex justify-content-between">
                  <field name="sex" />
                  <field name="activity_ids" widget="kanban_activity" />
                </div>
              </div>
            </t>
          </templates>
        </kanban>
      </field>
    </record>

    <record id="animals_action" model="ir.actions.act_window">
      <field name="name">Animales</field>
      <field name="res_model">animal</field>
      <field name="view_mode">search,tree,form,kanban</field>
    </record>

  </data>
</odoo>

=== ./views/waiting_room_sequence.xml ===
<odoo>
  <data noupdate="1">
    <!-- Secuencia para Tickets de Sala de Espera -->
    <record id="seq_vet_waiting_ticket" model="ir.sequence">
      <field name="name">Sala de Espera Ticket</field>
      <field name="code">vet.waiting.ticket.sequence</field>
      <field name="prefix">WR/</field>
      <field name="padding">4</field>
      <field name="number_increment">1</field>
    </record>
  </data>
</odoo>


=== ./views/surgeries_views.xml ===
<odoo>
    <data>

        <record id="surgery_action" model="ir.actions.act_window">
            <field name="name">Cirugías</field>
            <field name="res_model">animal.surgery</field>
            <field name="view_mode">tree,form</field>
        </record>
    </data>
</odoo>


=== ./views/vaccines_views.xml ===
<odoo>
    <data>

        <record id="vaccine_action" model="ir.actions.act_window">
            <field name="name">Vacunas</field>
            <field name="res_model">animal.vaccine</field>
            <field name="view_mode">tree,form</field>
        </record>
    </data>
</odoo>

=== ./views/animals_menus.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
    <data>
        <!-- Menú raíz -->
        <menuitem id="menu_animals" name="Vet" sequence="5"/>

        <!-- === NUEVO CONTENEDOR: Gestión de Sala de Espera === -->
        <menuitem
            id="menu_waiting_room"
            name="Gestión de Sala de Espera"
            parent="menu_animals"
            sequence="2"
        />
        <menuitem
            id="menu_waiting_room_tickets"
            name="Tickets"
            parent="menu_waiting_room"
            action="waiting_ticket_action"
            sequence="1"
        />
        <menuitem
            id="menu_waiting_room_waiting"
            name="En espera"
            parent="menu_waiting_room"
            action="waiting_ticket_waiting_action"
            sequence="2"
        />
        <menuitem
            id="menu_waiting_room_in_consultation"
            name="En consulta"
            parent="menu_waiting_room"
            action="waiting_ticket_in_consultation_action"
            sequence="3"
        />
        <menuitem
            id="menu_waiting_room_done"
            name="Atendidos"
            parent="menu_waiting_room"
            action="waiting_ticket_done_action"
            sequence="4"
        />
        <menuitem
            id="menu_waiting_room_cancelled"
            name="Cancelados"
            parent="menu_waiting_room"
            action="waiting_ticket_cancelled_action"
            sequence="5"
        />

        <!-- Listado de animales -->
        <menuitem
            id="menu_animals_list"
            name="Animales"
            parent="menu_animals"
            action="animals_action"
            sequence="1"
        />

        <!-- Visitas -->
        <menuitem
            id="menu_visits_list"
            name="Visitas"
            parent="menu_animals"
            action="visit_action"
            sequence="3"
        />

        <!-- Esterilizaciones -->
        <menuitem
            id="menu_sterilizations_list"
            name="Esterilizaciones"
            parent="menu_animals"
            action="sterilization_action"
            sequence="4"
        />

        <!-- Contenedor: Gestión Médica (se puede dejar sin action si prefieres que sea solo contenedor) -->
        <menuitem
            id="menu_medical_management"
            name="Gestión Médica"
            parent="menu_animals"
            action="animals_action"
            sequence="5"
        />

        <menuitem
            id="menu_medicines_list"
            name="Medicamentos"
            parent="menu_medical_management"
            action="medicine_action"
        />
        <menuitem
            id="menu_vaccines_list"
            name="Vacunas"
            parent="menu_medical_management"
            action="vaccine_action"
        />

        <!-- *** NUEVO: Catálogo de Desparasitantes *** -->
        <menuitem
            id="menu_dewormers_list"
            name="Desparasitantes"
            parent="menu_medical_management"
            action="dewormer_action"
        />

        <!-- *** NUEVO: Menú independiente para REGISTROS de desparasitación *** -->
        <menuitem
            id="menu_dewormings_list"
            name="Registros de Desparasitaciones"
            parent="menu_medical_management"
            action="deworming_action"
        />

        <!-- *** EXISTENTE: REGISTROS de vacunación *** -->
        <menuitem
            id="menu_vaccinations_list"
            name="Registros de Vacunación"
            parent="menu_medical_management"
            action="vaccination_action"
        />

        <!-- *** NUEVO: CONSENTIMIENTOS *** -->
        <menuitem
            id="menu_consents_list"
            name="Consentimientos"
            parent="menu_medical_management"
            action="consent_action"
        />

        <menuitem
            id="menu_allergies_list"
            name="Alergias"
            parent="menu_medical_management"
            action="allergy_action"
        />
        <menuitem
            id="menu_surgeries_list"
            name="Cirugías"
            parent="menu_medical_management"
            action="surgery_action"
        />

        <!-- Órdenes de Exámenes -->
        <menuitem
            id="menu_exam_orders_list"
            name="Órdenes de Exámenes"
            parent="menu_medical_management"
            action="exam_order_action"
        />

        <!-- Resultados de Exámenes (solo 'done') -->
        <menuitem
            id="menu_exam_results_list"
            name="Resultados de Exámenes"
            parent="menu_medical_management"
            action="exam_results_action"
        />

        <!-- Seguros -->
        <menuitem
            id="menu_insurances_list"
            name="Seguros"
            parent="menu_medical_management"
            action="insurance_action"
        />

        <!-- Configuración -->
        <menuitem
            id="menu_configuration"
            name="Configuration"
            parent="menu_animals"
            action="animals_action"
            sequence="6"
        />

        <menuitem
            id="menu_species_list"
            name="Especies"
            parent="menu_configuration"
            action="specie_action"
            sequence="1"
        />
        <menuitem
            id="menu_breeds_list"
            name="Razas"
            parent="menu_configuration"
            action="breed_action"
            sequence="2"
        />
        <menuitem
            id="menu_tags_list"
            name="Etiquetas"
            parent="menu_configuration"
            action="tag_action"
            sequence="3"
        />
    </data>
</odoo>

=== ./views/exam_orders_views.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- ===== Search ===== -->
    <record id="exam_order_search_view" model="ir.ui.view">
      <field name="name">animal.exam.order.search.view</field>
      <field name="model">animal.exam.order</field>
      <field name="arch" type="xml">
        <search>
          <field name="sequence" string="Referencia"/>
          <field name="animal_id" string="Animal"/>
          <field name="owner_id" string="Dueño"/>
          <field name="date" string="Fecha"/>
          <field name="exam_type" string="Tipo de examen"/>
          <field name="priority" string="Prioridad"/>
          <field name="state" string="Estado"/>
          <field name="doctor" string="Dr/Dra"/>

          <group expand="0" string="Agrupar por">
            <filter name="grp_animal" string="Animal" context="{'group_by':'animal_id'}"/>
            <filter name="grp_owner" string="Dueño" context="{'group_by':'owner_id'}"/>
            <filter name="grp_exam_type" string="Tipo de examen" context="{'group_by':'exam_type'}"/>
            <filter name="grp_priority" string="Prioridad" context="{'group_by':'priority'}"/>
            <filter name="grp_state" string="Estado" context="{'group_by':'state'}"/>
            <filter name="grp_date" string="Fecha" context="{'group_by':'date:month'}"/>
          </group>
        </search>
      </field>
    </record>

    <!-- ===== Tree ===== -->
    <record id="exam_order_tree_view" model="ir.ui.view">
      <field name="name">animal.exam.order.tree.view</field>
      <field name="model">animal.exam.order</field>
      <field name="arch" type="xml">
        <tree string="Órdenes de Exámenes">
          <field name="sequence" string="Ref."/>
          <field name="date"/>
          <field name="animal_id"/>
          <field name="owner_id" string="Dueño"/>
          <field name="exam_type" string="Examen"/>
          <field name="priority" string="Prioridad"/>
          <field name="state" string="Estado"/>
        </tree>
      </field>
    </record>

    <!-- ===== Form ===== -->
    <record id="exam_order_form_view" model="ir.ui.view">
      <field name="name">animal.exam.order.form.view</field>
      <field name="model">animal.exam.order</field>
      <field name="arch" type="xml">
        <form string="Órdenes de Exámenes">
          <header>
            <button name="action_confirm" type="object" class="btn-primary" string="Confirmar"
                    invisible="state != 'draft'"/>
            <button name="action_done" type="object" class="btn-primary" string="Marcar como Completado"
                    invisible="state != 'ordered'"/>
            <button name="action_cancel" type="object" string="Cancelar"
                    invisible="not (state in ('draft','ordered'))"/>
            <button name="action_reset_to_draft" type="object" string="Restablecer a Borrador"
                    invisible="not (state in ('done','cancelled'))"/>

            <!-- Descarga de PDF de la ORDEN (visible al estar confirmada) -->
            <button name="%(action_report_exam_order)d"
                    type="action"
                    class="btn-secondary"
                    string="Descargar Orden PDF"
                    invisible="state != 'ordered'"/>

            <!-- Descarga de PDF con RESULTADOS (visible en menú 'Resultados de Exámenes' = state done) -->
            <button name="%(action_report_exam_order)d"
                    type="action"
                    class="btn-secondary"
                    string="Descargar Resultado PDF"
                    invisible="state != 'done'"/>

            <field name="state" widget="statusbar" statusbar_visible="draft,ordered,done,cancelled"/>
          </header>

          <sheet>
            <!-- Título: Referencia -->
            <group>
              <field class="fs-1" name="sequence"/>
            </group>

            <group>
              <!-- Columna derecha: datos administrativos -->
              <group string="Datos">
                <group>
                  <field name="animal_id"/>
                </group>
                <group>
                  <field name="owner_id" readonly="1"/>
                </group>
                <group col="4">
                  <field name="date" colspan="2"/>
                  <field name="doctor" string="Dr/Dra" placeholder="Nombre del profesional" colspan="2"/>
                </group>
              </group>

              <!-- Columna izquierda: detalle de la orden -->
              <group string="Detalle de la Orden" colspan="2">
                <group>
                  <field name="exam_type"/>
                  <field name="exam_type_other" invisible="exam_type != 'otro'"/>
                  <field name="priority"/>
                  <field name="notes" placeholder="Indicaciones para el laboratorio / paciente..."/>
                </group>
                <group>
                  <field name="results" placeholder="Resultados, observaciones o interpretación..."/>
                  <field name="attachment_ids" widget="many2many_binary" string="Adjuntos (PDF, imágenes, etc.)"/>
                </group>
              </group>
            </group>
          </sheet>

          <div class="oe_chatter">
            <field widget="mail_thread" name="message_ids"/>
            <field widget="mail_activity" name="activity_ids"/>
          </div>
        </form>
      </field>
    </record>

    <!-- ===== Action (todas las órdenes) ===== -->
    <record id="exam_order_action" model="ir.actions.act_window">
      <field name="name">Órdenes de Exámenes</field>
      <field name="res_model">animal.exam.order</field>
      <field name="view_mode">search,tree,form,kanban</field>
    </record>

    <!-- ===== Action (solo resultados/completadas) ===== -->
    <record id="exam_results_action" model="ir.actions.act_window">
      <field name="name">Resultados de Exámenes</field>
      <field name="res_model">animal.exam.order</field>
      <field name="view_mode">search,tree,form,kanban</field>
      <field name="domain">[('state', '=', 'done')]</field>
    </record>

  </data>
</odoo>


=== ./views/insurances_views.xml ===
<odoo>
    <data>

        <record id="insurance_action" model="ir.actions.act_window">
            <field name="name">Seguros</field>
            <field name="res_model">animal.insurance</field>
            <field name="view_mode">tree,form</field>
        </record>
    </data>
</odoo>


=== ./views/vaccinations_views.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- ===== Search ===== -->
    <record id="vaccination_search_view" model="ir.ui.view">
      <field name="name">animal.vaccination.search.view</field>
      <field name="model">animal.vaccination</field>
      <field name="arch" type="xml">
        <search string="Buscar registros de vacunación">
          <field name="animal_id" string="Animal"/>
          <field name="owner_id" string="Dueño"/>
          <field name="specie_id" string="Especie"/>
          <field name="vaccine_id" string="Vacuna"/>
          <field name="date" string="Fecha vacunación"/>
          <field name="next_date" string="Próxima vacunación"/>
          <field name="route" string="Vía"/>
          <field name="doctor" string="Dr/Dra"/>
          <field name="notes" string="Notas/Observaciones"/>

          <group expand="0" string="Agrupar por">
            <filter name="grp_animal" string="Animal" context="{'group_by':'animal_id'}"/>
            <filter name="grp_owner" string="Dueño" context="{'group_by':'owner_id'}"/>
            <filter name="grp_specie" string="Especie" context="{'group_by':'specie_id'}"/>
            <filter name="grp_vaccine" string="Vacuna" context="{'group_by':'vaccine_id'}"/>
            <filter name="grp_route" string="Vía" context="{'group_by':'route'}"/>
            <filter name="grp_doctor" string="Dr/Dra" context="{'group_by':'doctor'}"/>
            <filter name="grp_date" string="Fecha (mes)" context="{'group_by':'date:month'}"/>
          </group>
        </search>
      </field>
    </record>

    <!-- ===== Tree ===== -->
    <record id="vaccination_tree_view" model="ir.ui.view">
      <field name="name">animal.vaccination.tree.view</field>
      <field name="model">animal.vaccination</field>
      <field name="arch" type="xml">
        <tree string="Registros de Vacunación">
          <field name="date" string="Fecha"/>
          <field name="animal_id" string="Animal"/>
          <field name="owner_id" string="Dueño"/>
          <field name="specie_id" string="Especie"/>
          <field name="vaccine_id" string="Vacuna"/>
          <field name="route" string="Vía"/>
          <field name="doctor" string="Dr/Dra"/>
          <field name="next_date" string="Próx. vacunación"/>
          <field name="notes" string="Notas"/>
        </tree>
      </field>
    </record>

    <!-- ===== Form ===== -->
    <record id="vaccination_form_view" model="ir.ui.view">
      <field name="name">animal.vaccination.form.view</field>
      <field name="model">animal.vaccination</field>
      <field name="arch" type="xml">
        <form string="Registro de Vacunación">
          <header>
            <!-- Botón para descargar el PDF del registro -->
            <button name="%(action_report_vaccination)d"
                    type="action"
                    class="btn-primary"
                    string="Descargar PDF"/>
          </header>

          <sheet>
            <group>
              <group string="Datos del Animal">
                <field name="animal_id" required="1"/>
                <field name="owner_id" readonly="1"/>
                <field name="specie_id" readonly="1"/>
              </group>
              <group string="Vacunación">
                <field name="vaccine_id" required="1"/>
                <field name="date" required="1"/>
                <field name="route"/>
                <field name="doctor" string="Dr/Dra" placeholder="Nombre del profesional"/>
                <field name="next_date" string="Próxima vacunación"/>
              </group>
            </group>
            <group>
              <field name="notes" placeholder="Notas u observaciones clínicas..."/>
            </group>
          </sheet>

          <div class="oe_chatter">
            <field widget="mail_thread" name="message_ids"/>
            <field widget="mail_activity" name="activity_ids"/>
          </div>
        </form>
      </field>
    </record>

    <!-- ===== Action (listado independiente) ===== -->
    <record id="vaccination_action" model="ir.actions.act_window">
      <field name="name">Registros de Vacunación</field>
      <field name="res_model">animal.vaccination</field>
      <field name="view_mode">search,tree,form,kanban</field>
    </record>

  </data>
</odoo>

=== ./views/visit_sequence.xml ===
<odoo>
    <data noupdate="1">
        <!-- Secuencia para el modelo animal.visit -->
        <record id="seq_animal_visit" model="ir.sequence">
            <field name="name">Animal Visita</field>
            <field name="code">animal.visit.sequence</field>
            <field name="prefix">VISIT/</field>
            <field name="padding">4</field>
            <field name="number_increment">1</field>
        </record>
    </data>
</odoo>
    

=== ./views/exam_order_sequence.xml ===
<odoo>
  <data noupdate="1">
    <!-- Secuencia para Órdenes de Exámenes -->
    <record id="seq_animal_exam_order" model="ir.sequence">
      <field name="name">Animal Orden de Examen</field>
      <field name="code">animal.exam.order.sequence</field>
      <field name="prefix">EXAM/</field>
      <field name="padding">4</field>
      <field name="number_increment">1</field>
    </record>
  </data>
</odoo>


=== ./views/visits_views.xml ===
<odoo>
    <data>

        <record id="animal_visit_search_view" model="ir.ui.view">
            <field name="name">animal.visit.search.view</field>
            <field name="model">animal.visit</field>
            <field name="arch" type="xml">
                <search>
                    <field name="name" />
                    <field name="owner" />
                    <field name="sequence" />

                    <!-- Reemplazamos campos antiguos por los nuevos en búsqueda -->
                    <field name="consultation_reason" string="Motivo de consulta" />
                    <field name="anamnesis" string="Anamnesis Remota y Actual" />
                    <field name="clinical_exam" string="Examen Clínico" />
                    <field name="prediagnoses" string="Prediagnósticos" />
                    <field name="treatment" string="Tratamiento" />
                    <field name="rp" string="Rp" />
                    <field name="follow_up" string="Control" />
                    <!-- Nuevo: permitir buscar por médico -->
                    <field name="doctor" string="Dr/Dra" />

                    <group expand="0" string="Visit info">
                        <filter name="animal_id" string="Animal" domain="[('animal_id','=','self')]"
                            context="{'group_by':'animal_id'}" />
                        <filter name="owner" string="Dueño" domain="[('owner', '=' , 'self')]"
                            context="{'group_by':'owner'}" />
                        <filter name="sex" string="Sexo" domain="[('sex', '=' , 'self')]"
                            context="{'group_by':'sex'}" />
                        <filter name="specie" string="Especie" domain="[('specie', '=' , 'self')]"
                            context="{'group_by':'specie'}" />
                        <filter name="breed" string="Raza" domain="[('breed', '=' , 'self')]"
                            context="{'group_by':'breed'}" />
                        <field name="date" />
                        <filter name="group_by_date" string="Fecha"
                            context="{'group_by': 'date:month'}" />
                    </group>
                </search>
            </field>
        </record>

        <record id="visit_tree_view" model="ir.ui.view">
            <field name="name">animal.visit.tree.view</field>
            <field name="model">animal.visit</field>
            <field name="arch" type="xml">
                <tree>
                    <field name="sequence" />
                    <field name="animal_id" />
                    <field name="owner" />
                    <!-- Mostrar un resumen con los nuevos campos más relevantes -->
                    <field name="consultation_reason" string="Motivo de consulta" />
                    <field name="treatment" string="Tratamiento" />
                    <field name="date" />
                </tree>
            </field>
        </record>

        <record id="visit_form_view" model="ir.ui.view">
            <field name="name">animal.visit.form.view</field>
            <field name="model">animal.visit</field>
            <field name="arch" type="xml">
                <form>
                    <header>
                        <!-- Botón para imprimir PDF de la Ficha Atención -->
                        <button name="%(action_report_visit)d"
                                type="action"
                                class="btn-primary"
                                string="Imprimir Ficha"/>
                    </header>
                    <sheet>
                        <!-- Referencia arriba como título -->
                        <group>
                            <field class="fs-1" name="sequence" />
                        </group>

                        <!-- ===== DISTRIBUCIÓN EN DOS COLUMNAS (IZQ más ancha) ===== -->
                        <!--
                             Primer group: left (colspan=2) = FICHA CLÍNICA (dos subcolumnas)
                             Segundo group: right = Datos administrativos (Animal, Dueño, Fecha + Dr/Dra)
                        -->
                        <group>
                            <!-- Columna DERECHA (más estrecha) -->
                            <group string="Datos de la Visita">
                                <group>
                                    <field name="animal_id" />
                                </group>
                                <group>
                                    <field name="owner" />
                                </group>
                                <!-- Fecha y Dr/Dra en la MISMA FILA con Dr/Dra más ancho -->
                                <group col="4">
                                    <field name="date" colspan="1"/>
                                    <field name="doctor" string="Dr/Dra" placeholder="Nombre del profesional" colspan="3"/>
                                </group>
                            </group>

                            <!-- Columna IZQUIERDA (más ancha) -->
                            <group string="Ficha Clínica" colspan="2">
                                <!-- Dos columnas internas dentro de Ficha Clínica -->
                                <group>
                                    <field name="consultation_reason" placeholder="Describa el motivo de la consulta..." />
                                    <field name="clinical_exam" placeholder="Hallazgos del examen clínico..." />
                                    <field name="treatment" placeholder="Tratamiento indicado..." />
                                    <field name="follow_up" placeholder="Fecha/Indicaciones de control..." />
                                </group>
                                <group>
                                    <field name="anamnesis" placeholder="Antecedentes remotos y actuales relevantes..." />
                                    <field name="prediagnoses" placeholder="Listado de diagnósticos presuntivos..." />
                                    <field name="rp" placeholder="Receta / prescripción (Rp)..." />
                                </group>
                            </group>
                        </group>

                        <!-- Campos antiguos mantenidos (opcional, puedes ocultarlos si ya no se usan)
                        <group string="(Histórico)">
                            <field name="reason" />
                            <field name="suggested_treatment" />
                            <field name="observations" />
                        </group>
                        -->
                    </sheet>
                    <div class="oe_chatter">
                        <field widget="mail_thread" name="message_ids" />
                        <field widget="mail_activity" name="activity_ids" />
                    </div>
                </form>
            </field>
        </record>

        <record id="animal_visit_kanban_view" model="ir.ui.view">
            <field name="name">animal.visit.kanban.view</field>
            <field name="model">animal.visit</field>
            <field name="arch" type="xml">
                <kanban class="o_kanban_mobile" sample="1">
                    <templates>
                        <t t-name="kanban-box">
                            <div t-attf-class="oe_kanban_global_click">
                                <div class="row">
                                    <div class="col-12">
                                        <strong>
                                            <field name="sequence" />
                                        </strong>
                                        <div><strong> Animal</strong>: <field name="animal_id" /></div>
                                    </div>
                                </div>
                                <hr class="my-2"/>
                                <div class="mb-2">
                                    <strong>Motivo:</strong>
                                    <span><field name="consultation_reason"/></span>
                                </div>
                                <div class="d-flex justify-content-between">
                                    <div>
                                        <strong>Dueño</strong>: <field name="owner" />
                                    </div>
                                    <field name="activity_ids" widget="kanban_activity" />
                                </div>
                            </div>
                        </t>
                    </templates>
                </kanban>
            </field>
        </record>

        <record id="visit_action" model="ir.actions.act_window">
            <field name="name">Visitas</field>
            <field name="res_model">animal.visit</field>
            <field name="view_mode">search,tree,form,kanban,pivot</field>
        </record>
    </data>
</odoo>


=== ./views/medicines_views.xml ===
<odoo>
    <data>

        <record id="medicine_action" model="ir.actions.act_window">
            <field name="name">Medicamentos</field>
            <field name="res_model">animal.medicine</field>
            <field name="view_mode">tree,form</field>
        </record>
    </data>
</odoo>


=== ./views/allergies_views.xml ===
<odoo>
    <data>

        <record id="allergy_action" model="ir.actions.act_window">
            <field name="name">Alergias</field>
            <field name="res_model">animal.allergy</field>
            <field name="view_mode">tree,form</field>
        </record>
    </data>
</odoo>


=== ./views/consents_views.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- Search -->
    <record id="consent_search_view" model="ir.ui.view">
      <field name="name">animal.consent.search.view</field>
      <field name="model">animal.consent</field>
      <field name="arch" type="xml">
        <search>
          <field name="sequence" string="Referencia"/>
          <field name="animal_id" string="Animal"/>
          <field name="owner_id" string="Dueño"/>
          <field name="date" string="Fecha"/>
          <field name="consent_type" string="Tipo"/>
          <field name="state" string="Estado"/>
          <field name="doctor_name" string="Médico/a"/>

          <group expand="0" string="Agrupar por">
            <filter name="grp_animal" string="Animal" context="{'group_by':'animal_id'}"/>
            <filter name="grp_owner" string="Dueño" context="{'group_by':'owner_id'}"/>
            <filter name="grp_type" string="Tipo" context="{'group_by':'consent_type'}"/>
            <filter name="grp_state" string="Estado" context="{'group_by':'state'}"/>
            <filter name="grp_doctor" string="Médico/a" context="{'group_by':'doctor_name'}"/>
            <filter name="grp_date" string="Fecha" context="{'group_by':'date:month'}"/>
          </group>
        </search>
      </field>
    </record>

    <!-- Tree -->
    <record id="consent_tree_view" model="ir.ui.view">
      <field name="name">animal.consent.tree.view</field>
      <field name="model">animal.consent</field>
      <field name="arch" type="xml">
        <tree string="Consentimientos">
          <field name="sequence" string="Ref."/>
          <field name="date"/>
          <field name="animal_id"/>
          <field name="owner_id" string="Dueño"/>
          <field name="consent_type" string="Tipo"/>
          <field name="state" string="Estado"/>
        </tree>
      </field>
    </record>

    <!-- Form -->
    <record id="consent_form_view" model="ir.ui.view">
      <field name="name">animal.consent.form.view</field>
      <field name="model">animal.consent</field>
      <field name="arch" type="xml">
        <form string="Consentimiento">
          <header>
            <button name="action_confirm" type="object" class="btn-primary" string="Marcar como Firmado"
                    invisible="state != 'draft'"/>
            <button name="action_cancel" type="object" string="Cancelar"
                    invisible="not (state in ('draft','signed'))"/>
            <button name="action_reset_to_draft" type="object" string="Restablecer a Borrador"
                    invisible="not (state in ('signed','cancelled'))"/>

            <!-- Descarga de PDF -->
            <button name="%(action_report_consent)d"
                    type="action"
                    class="btn-secondary"
                    string="Descargar PDF"/>

            <field name="state" widget="statusbar" statusbar_visible="draft,signed,cancelled"/>
          </header>

          <sheet>
            <!-- Título: Referencia -->
            <group>
              <field class="fs-1" name="sequence"/>
            </group>

            <group>
              <!-- Datos generales -->
              <group string="Datos">
                <group>
                  <field name="animal_id" required="1"/>
                </group>
                <group>
                  <field name="owner_id" readonly="1"/>
                </group>
                <group col="4">
                  <field name="date" colspan="2"/>
                  <field name="consent_type" colspan="2"/>
                </group>
                <group>
                  <field name="consent_title" placeholder="(Opcional) Título para el PDF"/>
                </group>
              </group>

              <!-- Contenido -->
              <group string="Contenido del consentimiento" colspan="2">
                <group>
                  <field name="description" placeholder="Describa el procedimiento o motivo..."/>
                  <field name="risks" placeholder="Describa los riesgos y posibles complicaciones..."/>
                </group>
                <group>
                  <field name="post_instructions" placeholder="Indique las instrucciones postprocedimiento..."/>
                  <field name="notes" placeholder="Notas internas (no se imprimen en el PDF)"/>
                </group>
              </group>
            </group>

            <group string="Firmas y profesional" col="4">
              <field name="doctor_name" string="Nombre M. Veterinario/a"/>
              <field name="doctor_rut" string="RUT (médico)"/>
              <field name="doctor_signature" widget="image" string="Firma Médico/a" colspan="2"/>
              <field name="owner_signature" widget="image" string="Firma Propietario/a" colspan="2"/>
            </group>
          </sheet>

          <div class="oe_chatter">
            <field widget="mail_thread" name="message_ids"/>
            <field widget="mail_activity" name="activity_ids"/>
          </div>
        </form>
      </field>
    </record>

    <!-- Action -->
    <record id="consent_action" model="ir.actions.act_window">
      <field name="name">Consentimientos</field>
      <field name="res_model">animal.consent</field>
      <field name="view_mode">search,tree,form,kanban</field>
    </record>

  </data>
</odoo>

=== ./views/consent_sequence.xml ===
<odoo>
  <data noupdate="1">
    <!-- Secuencia para Consentimientos -->
    <record id="seq_animal_consent" model="ir.sequence">
      <field name="name">Animal Consentimiento</field>
      <field name="code">animal.consent.sequence</field>
      <field name="prefix">CONS/</field>
      <field name="padding">4</field>
      <field name="number_increment">1</field>
    </record>
  </data>
</odoo>


=== ./views/dewormers_views.xml ===
<odoo>
    <data>

        <record id="dewormer_action" model="ir.actions.act_window">
            <field name="name">Desparasitantes</field>
            <field name="res_model">animal.dewormer</field>
            <field name="view_mode">tree,form</field>
        </record>

    </data>
</odoo>

=== ./views/sterilizations_views.xml ===
<odoo>
  <data>

    <!-- ====== Search ====== -->
    <record id="sterilization_search_view" model="ir.ui.view">
      <field name="name">animal.sterilization.search.view</field>
      <field name="model">animal.sterilization</field>
      <field name="arch" type="xml">
        <search>
          <field name="patient_name" string="Paciente"/>
          <!-- Antes: specie (Selection). Ahora: specie_id (Many2one). -->
          <field name="specie_id" string="Especie"/>
          <field name="sex" string="Sexo"/>
          <field name="date" string="Fecha"/>
          <field name="status" string="Estado"/>
          <field name="vet_name" string="Médico/a"/>
          <group expand="0" string="Agrupar por">
            <!-- Actualizamos el group_by a specie_id -->
            <filter name="grp_specie" string="Especie" context="{'group_by':'specie_id'}"/>
            <filter name="grp_status" string="Estado" context="{'group_by':'status'}"/>
            <filter name="grp_vet" string="Médico/a" context="{'group_by':'vet_name'}"/>
            <filter name="grp_date" string="Fecha" context="{'group_by': 'date:month'}"/>
          </group>
        </search>
      </field>
    </record>

    <!-- ====== Tree ====== -->
    <record id="sterilization_tree_view" model="ir.ui.view">
      <field name="name">animal.sterilization.tree.view</field>
      <field name="model">animal.sterilization</field>
      <field name="arch" type="xml">
        <tree string="Esterilizaciones">
          <field name="date"/>
          <field name="patient_name"/>
          <!-- Antes: specie. Ahora: specie_id. -->
          <field name="specie_id" string="Especie"/>
          <field name="sex"/>
          <field name="weight"/>
          <field name="procedure_type"/>
          <field name="status"/>
          <field name="vet_name"/>
        </tree>
      </field>
    </record>

    <!-- ====== Form ====== -->
    <record id="sterilization_form_view" model="ir.ui.view">
      <field name="name">animal.sterilization.form.view</field>
      <field name="model">animal.sterilization</field>
      <field name="arch" type="xml">
        <form string="Esterilización">
          <header>
            <!-- Botón para imprimir PDF -->
            <button name="%(action_report_sterilization)d"
                    type="action"
                    class="btn-primary"
                    string="Imprimir Ficha"/>
          </header>

          <sheet>

            <!-- Enlaces opcionales a registros -->
            <group>
              <group>
                <field name="animal_id"/>
              </group>
              <group>
                <field name="owner_id" string="Responsable (contacto)"/>
              </group>
            </group>

            <!-- ===== Datos responsable ===== -->
            <group string="Datos responsable" col="4">
              <field name="date"/>
              <field name="resp_rut"/>
              <field name="resp_birthdate" string="Fecha de nacimiento"/>
              <field name="resp_name" string="Nombre"/>
              <field name="resp_phone1" string="Teléfono 1"/>
              <field name="resp_phone2" string="Teléfono 2"/>
              <field name="resp_address" string="Dirección" colspan="2"/>
              <field name="resp_commune" string="Comuna"/>
              <field name="resp_region" string="Región"/>
              <field name="resp_email" string="Mail" colspan="2"/>
              <field name="resp_is_owner" widget="boolean_toggle" string="¿Es dueño/a de la mascota?"/>
            </group>

            <!-- ===== Datos Paciente ===== -->
            <group string="Datos Paciente" col="4">
              <field name="patient_name" string="Nombre"/>

              <!-- Antes: <field name="specie"/> -->
              <field name="specie_id" string="Especie" options="{'no_open': False, 'no_create_edit': False}"/>

              <!-- Antes: <field name="breed_text" string="Raza"/> -->
              <field name="breed_id" string="Raza"
                     domain="[('specie', '=', specie_id)]"
                     options="{'no_open': False, 'no_create_edit': False}"/>

              <field name="patient_birthdate" string="Fecha de Nacimiento"/>
              <field name="sex"/>
              <field name="color"/>
              <field name="weight" string="Peso (Kg)"/>
              <field name="pattern" string="Patrón"/>
              <field name="tenancy_type" string="Tipo Tenencia"/>
              <field name="commune_obtention" string="Comuna Obtención"/>
              <field name="animals_at_home" string="N° total animales en casa"/>
              <field name="obtention" string="Obtención"/>
              <separator string="Razón tenencia" colspan="4"/>
              <field name="tenure_reason" colspan="2"/>
              <!-- v17: usar invisible con expresión booleana -->
              <field name="tenure_reason_other" invisible="tenure_reason != 'otro'"/>
              <separator string="Antecedentes" colspan="4"/>
              <field name="already_sterilized"/>
              <field name="visited_vet_before"/>
              <field name="microchip_today"/>
            </group>

            <!-- ===== Procedimiento ===== -->
            <group string="Procedimiento" col="4">
              <field name="procedure_type"/>
              <!-- v17: invisibilidad en expresión directa -->
              <field name="ovario_approach" invisible="procedure_type != 'ovariohisterectomia'"/>
              <field name="orchiectomy_type" invisible="procedure_type != 'orquiectomia'"/>
              <field name="vet_name" string="Nombre M.veterinario/a"/>
              <field name="vet_rut" string="RUT"/>
              <field name="signature" widget="image" string="Firma y timbre" colspan="2"/>
            </group>

            <!-- ===== Resultado procedimientos ===== -->
            <group string="Resultado procedimientos" col="4">
              <field name="status" string="Estado"/>
              <!-- v17: invisibles cuando no es 'fallecido' -->
              <field name="death_cause" invisible="status != 'fallecido'"/>
              <field name="death_moment" invisible="status != 'fallecido'"/>
              <field name="death_date" invisible="status != 'fallecido'"/>
              <field name="notes" colspan="4"/>
            </group>

          </sheet>

          <div class="oe_chatter">
            <field widget="mail_thread" name="message_ids"/>
            <field widget="mail_activity" name="activity_ids"/>
          </div>
        </form>
      </field>
    </record>

    <!-- ====== Action ====== -->
    <record id="sterilization_action" model="ir.actions.act_window">
      <field name="name">Esterilizaciones</field>
      <field name="res_model">animal.sterilization</field>
      <field name="view_mode">search,tree,form,kanban</field>
    </record>

  </data>
</odoo>

=== ./views/waiting_room_views.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- ===== Search ===== -->
    <record id="waiting_ticket_search_view" model="ir.ui.view">
      <field name="name">vet.waiting.ticket.search.view</field>
      <field name="model">vet.waiting.ticket</field>
      <field name="arch" type="xml">
        <search string="Buscar tickets de sala de espera">
          <field name="sequence" string="Ticket"/>
          <field name="animal_id" string="Animal"/>
          <field name="owner_id" string="Dueño"/>
          <field name="arrival_time" string="Ingreso"/>
          <field name="priority" string="Prioridad"/>
          <field name="state" string="Estado"/>
          <field name="doctor" string="Dr/Dra"/>
          <field name="room" string="Box"/>
          <field name="reason" string="Motivo"/>
          <group expand="0" string="Agrupar por">
            <filter name="grp_state" string="Estado" context="{'group_by':'state'}"/>
            <filter name="grp_priority" string="Prioridad" context="{'group_by':'priority'}"/>
            <filter name="grp_date" string="Ingreso (día)" context="{'group_by':'arrival_time:day'}"/>
            <filter name="grp_doctor" string="Dr/Dra" context="{'group_by':'doctor'}"/>
            <filter name="grp_room" string="Box" context="{'group_by':'room'}"/>
          </group>

          <filter name="flt_waiting" string="En espera" domain="[('state','=','waiting')]"/>
          <filter name="flt_called" string="Llamado" domain="[('state','=','called')]"/>
          <filter name="flt_in_consultation" string="En consulta" domain="[('state','=','in_consultation')]"/>
          <filter name="flt_done" string="Atendidos" domain="[('state','=','done')]"/>
          <filter name="flt_cancelled" string="Cancelados" domain="[('state','=','cancelled')]"/>
        </search>
      </field>
    </record>

    <!-- ===== Tree ===== -->
    <record id="waiting_ticket_tree_view" model="ir.ui.view">
      <field name="name">vet.waiting.ticket.tree.view</field>
      <field name="model">vet.waiting.ticket</field>
      <field name="arch" type="xml">
        <tree string="Tickets" create="true" edit="true">
          <field name="sequence" string="Ticket"/>
          <field name="arrival_time" string="Ingreso"/>
          <field name="animal_id" string="Animal"/>
          <field name="owner_id" string="Dueño"/>
          <field name="reason" string="Motivo"/>
          <field name="priority" string="Prioridad"/>
          <field name="waiting_minutes" string="Min. espera"/>
          <field name="doctor" string="Dr/Dra"/>
          <field name="room" string="Box"/>
          <field name="state" string="Estado"/>
        </tree>
      </field>
    </record>

    <!-- ===== Form ===== -->
    <record id="waiting_ticket_form_view" model="ir.ui.view">
      <field name="name">vet.waiting.ticket.form.view</field>
      <field name="model">vet.waiting.ticket</field>
      <field name="arch" type="xml">
        <form string="Ticket Sala de Espera">
          <header>
            <button name="action_call" type="object" class="btn-primary" string="Llamar"
                    invisible="not (state in ('waiting','paused'))"/>
            <button name="action_start_consultation" type="object" class="btn-primary" string="Iniciar atención"
                    invisible="not (state in ('waiting','called','paused'))"/>
            <button name="action_pause" type="object" class="btn-secondary" string="Pausar"
                    invisible="state != 'in_consultation'"/>
            <button name="action_resume" type="object" class="btn-secondary" string="Reanudar"
                    invisible="state != 'paused'"/>
            <button name="action_open_visit" type="object" class="btn-secondary" string="Abrir visita"
                    invisible="not visit_id"/>
            <button name="action_done" type="object" class="btn-success" string="Finalizar"
                    invisible="not (state in ('in_consultation','called','paused'))"/>
            <button name="action_cancel" type="object" string="Cancelar"
                    invisible="state in ('done','cancelled')"/>
            <button name="action_reset_to_waiting" type="object" string="Reiniciar a espera"
                    invisible="not (state in ('done','cancelled'))"/>

            <field name="state" widget="statusbar"
                   statusbar_visible="waiting,called,in_consultation,paused,done,cancelled"/>
          </header>

          <sheet>
            <group>
              <group>
                <field class="fs-1" name="sequence" readonly="1"/>
                <field name="arrival_time" required="1"/>
                <field name="priority"/>
                <field name="waiting_minutes" readonly="1"/>
              </group>
              <group>
                <field name="animal_id" options="{'no_open': False, 'no_create_edit': False}" required="1"/>
                <field name="owner_id" readonly="1"/>
                <field name="doctor" placeholder="Nombre del profesional"/>
                <field name="room"/>
              </group>
            </group>

            <group>
              <group string="Paciente (solo lectura)">
                <field name="specie_id" readonly="1"/>
                <field name="breed_id" readonly="1"/>
                <field name="sex" readonly="1"/>
                <field name="microchip_number" readonly="1"/>
              </group>
              <group string="Motivo y notas">
                <field name="reason" placeholder="Describa brevemente el motivo de la consulta..."/>
                <field name="notes" placeholder="Notas internas del mostrador/triage..."/>
              </group>
            </group>

            <group string="Tiempos">
              <field name="called_time" readonly="1"/>
              <field name="start_time" readonly="1"/>
              <field name="end_time" readonly="1"/>
            </group>

            <div class="oe_button_box" name="button_box">
              <button name="action_open_visit" type="object" class="oe_stat_button" icon="fa-stethoscope"
                      attrs="{'invisible': [('visit_id','=',False)]}">
                <field name="visit_id" widget="statinfo" string="Visita"/>
              </button>
            </div>
          </sheet>

          <div class="oe_chatter">
            <field widget="mail_thread" name="message_ids"/>
            <field widget="mail_activity" name="activity_ids"/>
          </div>
        </form>
      </field>
    </record>

    <!-- ===== Kanban ===== -->
    <record id="waiting_ticket_kanban_view" model="ir.ui.view">
      <field name="name">vet.waiting.ticket.kanban.view</field>
      <field name="model">vet.waiting.ticket</field>
      <field name="arch" type="xml">
        <kanban class="o_kanban_mobile" sample="1" default_group_by="state">
          <templates>
            <t t-name="kanban-box">
              <div t-attf-class="oe_kanban_global_click">
                <div class="o_kanban_record_top">
                  <div class="o_kanban_record_headings d-flex justify-content-between">
                    <strong><field name="sequence"/></strong>
                    <div>
                      <span class="badge" t-attf-style="background:#e0e0e0;">Min: <field name="waiting_minutes"/></span>
                      <span class="badge">
                        <t t-if="record.priority.raw_value == '3'">Emergencia</t>
                        <t t-elif="record.priority.raw_value == '2'">Alta</t>
                        <t t-elif="record.priority.raw_value == '1'">Normal</t>
                        <t t-else="">Baja</t>
                      </span>
                    </div>
                  </div>
                </div>
                <div class="o_kanban_record_body">
                  <div><strong>Animal:</strong> <field name="animal_id"/></div>
                  <div><strong>Dueño:</strong> <field name="owner_id"/></div>
                  <div class="mt-1"><strong>Motivo:</strong> <field name="reason"/></div>
                </div>
                <div class="o_kanban_record_bottom d-flex justify-content-between align-items-center mt-2">
                  <div>
                    <t t-if="record.state.raw_value == 'waiting' or record.state.raw_value == 'paused'">
                      <button type="object" name="action_call" class="btn btn-primary btn-sm">Llamar</button>
                    </t>
                    <t t-if="record.state.raw_value in ('waiting','called','paused')">
                      <button type="object" name="action_start_consultation" class="btn btn-primary btn-sm">Iniciar</button>
                    </t>
                    <t t-if="record.state.raw_value == 'in_consultation'">
                      <button type="object" name="action_pause" class="btn btn-secondary btn-sm">Pausar</button>
                      <button type="object" name="action_done" class="btn btn-success btn-sm">Finalizar</button>
                    </t>
                    <t t-if="record.state.raw_value == 'paused'">
                      <button type="object" name="action_resume" class="btn btn-secondary btn-sm">Reanudar</button>
                    </t>
                  </div>
                  <div>
                    <t t-if="record.visit_id.value">
                      <button type="object" name="action_open_visit" class="btn btn-light btn-sm">Visita</button>
                    </t>
                  </div>
                </div>
              </div>
            </t>
          </templates>
        </kanban>
      </field>
    </record>

    <!-- ===== Actions ===== -->
    <record id="waiting_ticket_action" model="ir.actions.act_window">
      <field name="name">Tickets</field>
      <field name="res_model">vet.waiting.ticket</field>
      <field name="view_mode">search,kanban,tree,form,activity</field>
      <field name="context">{}</field>
    </record>

    <record id="waiting_ticket_waiting_action" model="ir.actions.act_window">
      <field name="name">Tickets en espera</field>
      <field name="res_model">vet.waiting.ticket</field>
      <field name="view_mode">search,kanban,tree,form</field>
      <field name="domain">[('state','=','waiting')]</field>
    </record>

    <record id="waiting_ticket_in_consultation_action" model="ir.actions.act_window">
      <field name="name">En consulta</field>
      <field name="res_model">vet.waiting.ticket</field>
      <field name="view_mode">search,kanban,tree,form</field>
      <field name="domain">[('state','=','in_consultation')]</field>
    </record>

    <record id="waiting_ticket_done_action" model="ir.actions.act_window">
      <field name="name">Atendidos</field>
      <field name="res_model">vet.waiting.ticket</field>
      <field name="view_mode">search,tree,form,kanban</field>
      <field name="domain">[('state','=','done')]</field>
    </record>

    <record id="waiting_ticket_cancelled_action" model="ir.actions.act_window">
      <field name="name">Cancelados</field>
      <field name="res_model">vet.waiting.ticket</field>
      <field name="view_mode">search,tree,form,kanban</field>
      <field name="domain">[('state','=','cancelled')]</field>
    </record>

    <!-- ===== Acción de servidor: Llamar siguiente ===== -->
    <record id="waiting_ticket_call_next_server_action" model="ir.actions.server">
      <field name="name">Llamar siguiente</field>
      <field name="model_id" ref="model_vet_waiting_ticket"/>
      <field name="binding_model_id" ref="model_vet_waiting_ticket"/>
      <field name="binding_type">action</field>
      <field name="state">code</field>
      <field name="code"><![CDATA[
# Busca el siguiente ticket en espera y lo abre
next_ticket = env['vet.waiting.ticket'].search([('state','=','waiting')], order='priority desc, arrival_time asc', limit=1)
if next_ticket:
    next_ticket.action_call()
    action = {
        "type": "ir.actions.act_window",
        "res_model": "vet.waiting.ticket",
        "res_id": next_ticket.id,
        "view_mode": "form",
        "target": "current",
    }
else:
    action = {
        "type": "ir.actions.client",
        "tag": "display_notification",
        "params": {
            "title": "Sala de espera",
            "message": "No hay tickets en espera.",
            "sticky": False,
            "type": "warning",
        }
    }
      ]]></field>
    </record>

  </data>
</odoo>


=== ./views/animal_partner_views.xml ===
<odoo>
    <data>
        <record id="animal_partner" model="ir.ui.view">
            <field name="name">partner.pet.form.view</field>
            <field name="model">res.partner</field>
            <field name="inherit_id" ref="base.view_partner_form" />
            <field name="arch" type="xml">
                <xpath expr="//page[@name='internal_notes']" position="after">
                    <page string="Animales">
                        <field name="pet">
                            <tree>
                                <field name="name" />
                                <field name="species" />
                                <field name="breed" />
                                <field name="sex" />
                            </tree>
                            <form>
                                <sheet>
                                    <div class="d-flex justify-content-between">
                                        <div>
                                            <label for="name" string="Nombre" />
                                            <div>
                                                <field name="name" class="fs-1 mb-4" />
                                            </div>
                                        </div>
                                        <field name="photo" widget="image" class="oe_avatar" />
                                    </div>
                                    <group>
                                        <group>
                                            <field name="identification" />
                                        </group>
                                        <group>
                                            <field name="owner" />
                                        </group>
                                        <group>
                                            <field name="species" />
                                        </group>
                                        <group>
                                            <field name="breed" />
                                        </group>
                                        <group>
                                            <field name="sex" />
                                        </group>
                                        <group>
                                            <field name="size" />
                                        </group>
                                    </group>
                                </sheet>
                            </form>
                        </field>
                    </page>
                </xpath>
            </field>
        </record>
    </data>
</odoo>


=== ./views/dewormings_views.xml ===
<?xml version="1.0" encoding="utf-8"?>
<odoo>
  <data>

    <!-- ===== Search ===== -->
    <record id="deworming_search_view" model="ir.ui.view">
      <field name="name">animal.deworming.search.view</field>
      <field name="model">animal.deworming</field>
      <field name="arch" type="xml">
        <search string="Buscar registros de desparasitación">
          <field name="animal_id" string="Animal"/>
          <field name="owner_id" string="Dueño"/>
          <field name="specie_id" string="Especie"/>
          <field name="dewormer_id" string="Desparasitante"/>
          <field name="date" string="Fecha desparasitación"/>
          <field name="next_date" string="Próxima desparasitación"/>
          <field name="route" string="Vía"/>
          <field name="doctor" string="Dr/Dra"/>
          <field name="notes" string="Notas/Observaciones"/>

          <group expand="0" string="Agrupar por">
            <filter name="grp_animal" string="Animal" context="{'group_by':'animal_id'}"/>
            <filter name="grp_owner" string="Dueño" context="{'group_by':'owner_id'}"/>
            <filter name="grp_specie" string="Especie" context="{'group_by':'specie_id'}"/>
            <filter name="grp_dewormer" string="Desparasitante" context="{'group_by':'dewormer_id'}"/>
            <filter name="grp_route" string="Vía" context="{'group_by':'route'}"/>
            <filter name="grp_doctor" string="Dr/Dra" context="{'group_by':'doctor'}"/>
            <filter name="grp_date" string="Fecha (mes)" context="{'group_by':'date:month'}"/>
          </group>
        </search>
      </field>
    </record>

    <!-- ===== Tree ===== -->
    <record id="deworming_tree_view" model="ir.ui.view">
      <field name="name">animal.deworming.tree.view</field>
      <field name="model">animal.deworming</field>
      <field name="arch" type="xml">
        <tree string="Registros de Desparasitaciones">
          <field name="date" string="Fecha"/>
          <field name="animal_id" string="Animal"/>
          <field name="owner_id" string="Dueño"/>
          <field name="specie_id" string="Especie"/>
          <field name="dewormer_id" string="Desparasitante"/>
          <field name="route" string="Vía"/>
          <field name="doctor" string="Dr/Dra"/>
          <field name="next_date" string="Próx. desparasitación"/>
          <field name="notes" string="Notas"/>
        </tree>
      </field>
    </record>

    <!-- ===== Form ===== -->
    <record id="deworming_form_view" model="ir.ui.view">
      <field name="name">animal.deworming.form.view</field>
      <field name="model">animal.deworming</field>
      <field name="arch" type="xml">
        <form string="Registro de Desparasitación">
          <sheet>
            <group>
              <group string="Datos del Animal">
                <field name="animal_id" required="1"/>
                <field name="owner_id" readonly="1"/>
                <field name="specie_id" readonly="1"/>
              </group>
              <group string="Desparasitación">
                <field name="dewormer_id" required="1"/>
                <field name="date" required="1"/>
                <field name="route"/>
                <field name="doctor" string="Dr/Dra" placeholder="Nombre del profesional"/>
                <field name="next_date" string="Próxima desparasitación"/>
              </group>
            </group>
            <group>
              <field name="notes" placeholder="Notas u observaciones clínicas..."/>
            </group>
          </sheet>

          <div class="oe_chatter">
            <field widget="mail_thread" name="message_ids"/>
            <field widget="mail_activity" name="activity_ids"/>
          </div>
        </form>
      </field>
    </record>

    <!-- ===== Action (listado independiente) ===== -->
    <record id="deworming_action" model="ir.actions.act_window">
      <field name="name">Registros de Desparasitaciones</field>
      <field name="res_model">animal.deworming</field>
      <field name="view_mode">search,tree,form,kanban</field>
    </record>

  </data>
</odoo>

=== ./views/animals_identification.xml ===
<odoo>
    <data noupdate="1">
        <!-- Secuencia para el modelo animal.visit -->
        <record id="animal_id" model="ir.sequence">
            <field name="name">Identificación de Animal</field>
            <field name="code">animal.identification</field>
            <field name="prefix">ID/</field>
            <field name="padding">6</field>
            <field name="number_increment">1</field>
        </record>
    </data>
</odoo>
    

=== ./combined.txt ===
